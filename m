Return-Path: <linux-acpi-owner@vger.kernel.org>
X-Original-To: lists+linux-acpi@lfdr.de
Delivered-To: lists+linux-acpi@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 63BDC39D5A8
	for <lists+linux-acpi@lfdr.de>; Mon,  7 Jun 2021 09:13:17 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229923AbhFGHPG (ORCPT <rfc822;lists+linux-acpi@lfdr.de>);
        Mon, 7 Jun 2021 03:15:06 -0400
Received: from smtp-out2.suse.de ([195.135.220.29]:56142 "EHLO
        smtp-out2.suse.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229436AbhFGHPG (ORCPT
        <rfc822;linux-acpi@vger.kernel.org>); Mon, 7 Jun 2021 03:15:06 -0400
Received: from relay2.suse.de (unknown [149.44.160.134])
        by smtp-out2.suse.de (Postfix) with ESMTP id 5A6BA1FD30;
        Mon,  7 Jun 2021 07:13:14 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=suse.de; s=susede2_rsa;
        t=1623049994; h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=aHCqXBT+MGYC5mZhyDA+3mFlUNAnp8q9dvOMZ0W9WJI=;
        b=FlrNGLi8rvCIgp3RXrUnbL/05DETZ2bF3dEHIA+DN94ch7wjF5vL7FdpRos6vtJOgST1rs
        5qKgfoujUhlC/EMQ/dbmZ/DsiWVhIl+3+4RU5YXToA0+IrzUNRUeVLZghFhc7DLV36gaU1
        MXpM30mc+1epGbFxPHg4TCJo9acE9S0=
DKIM-Signature: v=1; a=ed25519-sha256; c=relaxed/relaxed; d=suse.de;
        s=susede2_ed25519; t=1623049994;
        h=from:from:reply-to:date:date:message-id:message-id:to:to:cc:cc:
         mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=aHCqXBT+MGYC5mZhyDA+3mFlUNAnp8q9dvOMZ0W9WJI=;
        b=PGcoBXZRnAg/FOkJ5qNCYz+Nog6xfzFiRAesLCWwZmrhYfOKBmR7heRqtPt7GLEK2MWjl4
        xYMn3vVGnmjk7iCA==
Received: from alsa1.suse.de (alsa1.suse.de [10.160.4.42])
        by relay2.suse.de (Postfix) with ESMTP id 2FEFDA3B87;
        Mon,  7 Jun 2021 07:13:14 +0000 (UTC)
Date:   Mon, 07 Jun 2021 09:13:14 +0200
Message-ID: <s5h35tuf8qd.wl-tiwai@suse.de>
From:   Takashi Iwai <tiwai@suse.de>
To:     Viresh Kumar <viresh.kumar@linaro.org>
Cc:     kyle.meyer@hpe.com, rjw@rjwysocki.net,
        linux-kernel@vger.kernel.org, linux-pm@vger.kernel.org,
        linux-acpi@vger.kernel.org, Takashi Iwai <tiwai@suse.com>
Subject: Re: [PATCH] acpi-cpufreq: Skip cleanup if initialization didn't occur
In-Reply-To: <20210607032550.qdnl2sxnny42rtwa@vireshk-i7>
References: <20210604170500.46875-1-kyle.meyer@hpe.com>
        <20210607032550.qdnl2sxnny42rtwa@vireshk-i7>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI/1.14.6 (Maruoka)
 FLIM/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL/10.8 Emacs/25.3
 (x86_64-suse-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI 1.14.6 - "Maruoka")
Content-Type: text/plain; charset=US-ASCII
Precedence: bulk
List-ID: <linux-acpi.vger.kernel.org>
X-Mailing-List: linux-acpi@vger.kernel.org

On Mon, 07 Jun 2021 05:25:50 +0200,
Viresh Kumar wrote:
> 
> On 04-06-21, 12:05, kyle.meyer@hpe.com wrote:
> > From: Kyle Meyer <kyle.meyer@hpe.com>
> > 
> > acpi-cpufreq is loaded without performing initialization when a cpufreq
> > driver exists.
> > 
> > If initialization didn't occur then skip cleanup in acpi_cpufreq_exit().
> > This prevents unnecessary freeing and unregistering when the module is
> > unloaded.
> > 
> > Reported-by: Takashi Iwai <tiwai@suse.com>
> > Signed-off-by: Kyle Meyer <kyle.meyer@hpe.com>
> > ---
> >  drivers/cpufreq/acpi-cpufreq.c | 11 +++++++++++
> >  1 file changed, 11 insertions(+)
> > 
> > diff --git a/drivers/cpufreq/acpi-cpufreq.c b/drivers/cpufreq/acpi-cpufreq.c
> > index 7e7450453714..8d425f14c267 100644
> > --- a/drivers/cpufreq/acpi-cpufreq.c
> > +++ b/drivers/cpufreq/acpi-cpufreq.c
> > @@ -1042,8 +1042,19 @@ static int __init acpi_cpufreq_init(void)
> >  
> >  static void __exit acpi_cpufreq_exit(void)
> >  {
> > +	const char *current_driver;
> > +
> >  	pr_debug("%s\n", __func__);
> >  
> > +	/*
> > +	 * If another cpufreq_driver was loaded, preventing acpi-cpufreq from
> > +	 * registering, there's no need to unregister it.
> > +	 */
> > +	current_driver = cpufreq_get_current_driver();
> > +	if (!current_driver ||
> > +	    strncmp(current_driver, acpi_cpufreq_driver.name, strlen(acpi_cpufreq_driver.name)))
> > +		return;
> > +
> >  	acpi_cpufreq_boost_exit();
> >  
> >  	cpufreq_unregister_driver(&acpi_cpufreq_driver);
> 
> Looks like some misunderstanding here, this shouldn't happen. If
> initialization didn't occur, then exit shall never be called.

The missing key information is that it's a fix for the recent change
for 5.14, i.e. 
Fixes: c1d6d2fd2f64 ("cpufreq: acpi-cpufreq: Skip initialization if cpufreq driver is present")

The change made the module left even if it exits before registering
the cpufreq driver object.


Takashi
