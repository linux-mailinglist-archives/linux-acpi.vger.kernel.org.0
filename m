Return-Path: <linux-acpi+bounces-7641-lists+linux-acpi=lfdr.de@vger.kernel.org>
X-Original-To: lists+linux-acpi@lfdr.de
Delivered-To: lists+linux-acpi@lfdr.de
Received: from ny.mirrors.kernel.org (ny.mirrors.kernel.org [147.75.199.223])
	by mail.lfdr.de (Postfix) with ESMTPS id 6FC9E955D7E
	for <lists+linux-acpi@lfdr.de>; Sun, 18 Aug 2024 18:28:33 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ny.mirrors.kernel.org (Postfix) with ESMTPS id 8988B1C208E3
	for <lists+linux-acpi@lfdr.de>; Sun, 18 Aug 2024 16:28:32 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 59BF514831D;
	Sun, 18 Aug 2024 16:28:28 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=wanadoo.fr header.i=@wanadoo.fr header.b="ReAik76l"
X-Original-To: linux-acpi@vger.kernel.org
Received: from smtp.smtpout.orange.fr (smtp-23.smtpout.orange.fr [80.12.242.23])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id C1F51610D;
	Sun, 18 Aug 2024 16:28:23 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=80.12.242.23
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1723998508; cv=none; b=bqJwrfzey6B2yw3jP8MMtIr9eG8qHKfRZ1NBYY/38tMTXOKQDTHMndvC+1bdSUvdXkMaf5rg5uPCZeuxM7oxcnT6NqpAGnlhcOyC6MWgqFR4KNU+zyVaNNdeLN2eaMIvH5Bm+mVftMztsDRozX4ji3Ht+0cZIo/XAb6sFq1e0dc=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1723998508; c=relaxed/simple;
	bh=pmY66ohqod4upjSoQttBBTJ7ymMPiOOvQKRFZLK00wQ=;
	h=Content-Type:Message-ID:Date:MIME-Version:To:Cc:From:Subject; b=uAqkVCoef+S1KsG5zZXF41Z1io2M1EL/8OlgpfCHwSVyjLvTcGk9sm2awG/NkhTkiKUcVzPQ7Gzwi2OAEAdtMq/QF8l6Q4S0EL+xEhyI4zdmoBPL9Q0uIA79UiYgrP0r4CGAlA4G+EYfnQ86Q3iC0vyOug28HN8iRz5H7ReMbLg=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=wanadoo.fr; spf=pass smtp.mailfrom=wanadoo.fr; dkim=pass (2048-bit key) header.d=wanadoo.fr header.i=@wanadoo.fr header.b=ReAik76l; arc=none smtp.client-ip=80.12.242.23
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=wanadoo.fr
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=wanadoo.fr
Received: from [192.168.1.11] ([90.91.110.163])
	by smtp.orange.fr with ESMTPA
	id fiFMsuVqMRdXDfiFMsr5dP; Sun, 18 Aug 2024 17:55:13 +0200
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=wanadoo.fr;
	s=t20230301; t=1723996513;
	bh=B+DC8Gd6pRW6CvasR12/1IT7TSgsrd9hyB0zwfqFAc0=;
	h=Message-ID:Date:MIME-Version:To:From:Subject;
	b=ReAik76lwSTzJu1znt3PgtGxThlQJ5VuKSonSao3eONrGeHjLU1JlM2l8ZM2B0zW+
	 dQioj3a5KQaW0mLG0pNt8i9iGpYY6km/PCVygxgufydiL5V4eqfDFrx6mEtU0B+KmP
	 RVjU/2tz+QDzhakna6fR/MYh4HpRS+3/wBwPzTPjVKTNIFKpQ8z5sJgho6FFFLUWiq
	 SwS3nAKmxufXAFievY3WptI3f9PQU4S1kXhY5CwxdStnqdgn9xUeWvlzxRaaYLm46K
	 GAhkd24GSw2ZN1NVdnuVKFXKGB8Kj1vaFSutPkKmoMvnPaaEj6i6bwbFU/9t14K9Zg
	 D/yr+WbPiHyRQ==
X-ME-Helo: [192.168.1.11]
X-ME-Auth: anVsaWVuLmxhbW9tZUB3YW5hZG9vLmZy
X-ME-Date: Sun, 18 Aug 2024 17:55:13 +0200
X-ME-IP: 90.91.110.163
Content-Type: multipart/mixed; boundary="------------fAWBgLL05jQozC47B0qu3NJT"
Message-ID: <1226760b-4699-4529-bf57-6423938157a3@wanadoo.fr>
Date: Sun, 18 Aug 2024 17:55:12 +0200
Precedence: bulk
X-Mailing-List: linux-acpi@vger.kernel.org
List-Id: <linux-acpi.vger.kernel.org>
List-Subscribe: <mailto:linux-acpi+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-acpi+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
To: rafael@kernel.org
Content-Language: fr
Cc: lenb@kernel.org, linux-acpi@vger.kernel.org, linux-kernel@vger.kernel.org
From: Lamome Julien <julien.lamome@wanadoo.fr>
Subject: issue with Asus Vivobook keyboard

This is a multi-part message in MIME format.
--------------fAWBgLL05jQozC47B0qu3NJT
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit

Hello,

I have an issue with keyboard on my Asus Vivobook Laptop.

I open a bug report in Debian 1078696@bugs.debian.org which recomand to 
submit issue and solution directly to you.

I joined my correction to resource.c . This correction simply add my 
laptop to list of other Vivobook. (cf. file join)

Thank you for including in upstream.


J. Lamome.

--------------fAWBgLL05jQozC47B0qu3NJT
Content-Type: text/x-csrc; charset=UTF-8; name="resource.c"
Content-Disposition: attachment; filename="resource.c"
Content-Transfer-Encoding: base64

Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb25seQovKgogKiBkcml2ZXJz
L2FjcGkvcmVzb3VyY2UuYyAtIEFDUEkgZGV2aWNlIHJlc291cmNlcyBpbnRlcnByZXRhdGlv
bi4KICoKICogQ29weXJpZ2h0IChDKSAyMDEyLCBJbnRlbCBDb3JwLgogKiBBdXRob3I6IFJh
ZmFlbCBKLiBXeXNvY2tpIDxyYWZhZWwuai53eXNvY2tpQGludGVsLmNvbT4KICoKICogfn5+
fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+
fn5+fn5+fn5+fn5+fn5+fn5+CiAqCiAqIH5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+
fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fgogKi8KCiNp
bmNsdWRlIDxsaW51eC9hY3BpLmg+CiNpbmNsdWRlIDxsaW51eC9kZXZpY2UuaD4KI2luY2x1
ZGUgPGxpbnV4L2V4cG9ydC5oPgojaW5jbHVkZSA8bGludXgvaW9wb3J0Lmg+CiNpbmNsdWRl
IDxsaW51eC9zbGFiLmg+CiNpbmNsdWRlIDxsaW51eC9pcnEuaD4KI2luY2x1ZGUgPGxpbnV4
L2RtaS5oPgoKI2lmZGVmIENPTkZJR19YODYKI2RlZmluZSB2YWxpZF9JUlEoaSkgKCgoaSkg
IT0gMCkgJiYgKChpKSAhPSAyKSkKc3RhdGljIGlubGluZSBib29sIGFjcGlfaW9zcGFjZV9y
ZXNvdXJjZV92YWxpZChzdHJ1Y3QgcmVzb3VyY2UgKnJlcykKewoJLyogT24gWDg2IElPIHNw
YWNlIGlzIGxpbWl0ZWQgdG8gdGhlIFswIC0gNjRLXSBJTyBwb3J0IHJhbmdlICovCglyZXR1
cm4gcmVzLT5lbmQgPCAweDEwMDAzOwp9CiNlbHNlCiNkZWZpbmUgdmFsaWRfSVJRKGkpICh0
cnVlKQovKgogKiBBQ1BJIElPIGRlc2NyaXB0b3JzIG9uIGFyY2hlcyBvdGhlciB0aGFuIFg4
NiBjb250YWluIE1NSU8gQ1BVIHBoeXNpY2FsCiAqIGFkZHJlc3NlcyBtYXBwaW5nIElPIHNw
YWNlIGluIENQVSBwaHlzaWNhbCBhZGRyZXNzIHNwYWNlLCBJTyBzcGFjZQogKiByZXNvdXJj
ZXMgY2FuIGJlIHBsYWNlZCBhbnl3aGVyZSBpbiB0aGUgNjQtYml0IHBoeXNpY2FsIGFkZHJl
c3Mgc3BhY2UuCiAqLwpzdGF0aWMgaW5saW5lIGJvb2wKYWNwaV9pb3NwYWNlX3Jlc291cmNl
X3ZhbGlkKHN0cnVjdCByZXNvdXJjZSAqcmVzKSB7IHJldHVybiB0cnVlOyB9CiNlbmRpZgoK
I2lmIElTX0VOQUJMRUQoQ09ORklHX0FDUElfR0VORVJJQ19HU0kpCnN0YXRpYyBpbmxpbmUg
Ym9vbCBpc19nc2koc3RydWN0IGFjcGlfcmVzb3VyY2VfZXh0ZW5kZWRfaXJxICpleHRfaXJx
KQp7CglyZXR1cm4gZXh0X2lycS0+cmVzb3VyY2Vfc291cmNlLnN0cmluZ19sZW5ndGggPT0g
MCAmJgoJICAgICAgIGV4dF9pcnEtPnByb2R1Y2VyX2NvbnN1bWVyID09IEFDUElfQ09OU1VN
RVI7Cn0KI2Vsc2UKc3RhdGljIGlubGluZSBib29sIGlzX2dzaShzdHJ1Y3QgYWNwaV9yZXNv
dXJjZV9leHRlbmRlZF9pcnEgKmV4dF9pcnEpCnsKCXJldHVybiB0cnVlOwp9CiNlbmRpZgoK
c3RhdGljIGJvb2wgYWNwaV9kZXZfcmVzb3VyY2VfbGVuX3ZhbGlkKHU2NCBzdGFydCwgdTY0
IGVuZCwgdTY0IGxlbiwgYm9vbCBpbykKewoJdTY0IHJlc2xlbiA9IGVuZCAtIHN0YXJ0ICsg
MTsKCgkvKgoJICogQ0hFQ0tNRTogbGVuIG1pZ2h0IGJlIHJlcXVpcmVkIHRvIGNoZWNrIHZl
cnN1cyBhIG1pbmltdW0KCSAqIGxlbmd0aCBhcyB3ZWxsLiAxIGZvciBpbyBpcyBmaW5lLCBi
dXQgZm9yIG1lbW9yeSBpdCBkb2VzCgkgKiBub3QgbWFrZSBhbnkgc2Vuc2UgYXQgYWxsLgoJ
ICogTm90ZTogc29tZSBCSU9TZXMgcmVwb3J0IGluY29ycmVjdCBsZW5ndGggZm9yIEFDUEkg
YWRkcmVzcyBzcGFjZQoJICogZGVzY3JpcHRvciwgc28gcmVtb3ZlIGNoZWNrIG9mICdyZXNs
ZW4gPT0gbGVuJyB0byBhdm9pZCByZWdyZXNzaW9uLgoJICovCglpZiAobGVuICYmIHJlc2xl
biAmJiBzdGFydCA8PSBlbmQpCgkJcmV0dXJuIHRydWU7CgoJcHJfZGVidWcoIkFDUEk6IGlu
dmFsaWQgb3IgdW5hc3NpZ25lZCByZXNvdXJjZSAlcyBbJTAxNmxseCAtICUwMTZsbHhdIGxl
bmd0aCBbJTAxNmxseF1cbiIsCgkJaW8gPyAiaW8iIDogIm1lbSIsIHN0YXJ0LCBlbmQsIGxl
bik7CgoJcmV0dXJuIGZhbHNlOwp9CgpzdGF0aWMgdm9pZCBhY3BpX2Rldl9tZW1yZXNvdXJj
ZV9mbGFncyhzdHJ1Y3QgcmVzb3VyY2UgKnJlcywgdTY0IGxlbiwKCQkJCSAgICAgICB1OCB3
cml0ZV9wcm90ZWN0KQp7CglyZXMtPmZsYWdzID0gSU9SRVNPVVJDRV9NRU07CgoJaWYgKCFh
Y3BpX2Rldl9yZXNvdXJjZV9sZW5fdmFsaWQocmVzLT5zdGFydCwgcmVzLT5lbmQsIGxlbiwg
ZmFsc2UpKQoJCXJlcy0+ZmxhZ3MgfD0gSU9SRVNPVVJDRV9ESVNBQkxFRCB8IElPUkVTT1VS
Q0VfVU5TRVQ7CgoJaWYgKHdyaXRlX3Byb3RlY3QgPT0gQUNQSV9SRUFEX1dSSVRFX01FTU9S
WSkKCQlyZXMtPmZsYWdzIHw9IElPUkVTT1VSQ0VfTUVNX1dSSVRFQUJMRTsKfQoKc3RhdGlj
IHZvaWQgYWNwaV9kZXZfZ2V0X21lbXJlc291cmNlKHN0cnVjdCByZXNvdXJjZSAqcmVzLCB1
NjQgc3RhcnQsIHU2NCBsZW4sCgkJCQkgICAgIHU4IHdyaXRlX3Byb3RlY3QpCnsKCXJlcy0+
c3RhcnQgPSBzdGFydDsKCXJlcy0+ZW5kID0gc3RhcnQgKyBsZW4gLSAxOwoJYWNwaV9kZXZf
bWVtcmVzb3VyY2VfZmxhZ3MocmVzLCBsZW4sIHdyaXRlX3Byb3RlY3QpOwp9CgovKioKICog
YWNwaV9kZXZfcmVzb3VyY2VfbWVtb3J5IC0gRXh0cmFjdCBBQ1BJIG1lbW9yeSByZXNvdXJj
ZSBpbmZvcm1hdGlvbi4KICogQGFyZXM6IElucHV0IEFDUEkgcmVzb3VyY2Ugb2JqZWN0Lgog
KiBAcmVzOiBPdXRwdXQgZ2VuZXJpYyByZXNvdXJjZSBvYmplY3QuCiAqCiAqIENoZWNrIGlm
IHRoZSBnaXZlbiBBQ1BJIHJlc291cmNlIG9iamVjdCByZXByZXNlbnRzIGEgbWVtb3J5IHJl
c291cmNlIGFuZAogKiBpZiB0aGF0J3MgdGhlIGNhc2UsIHVzZSB0aGUgaW5mb3JtYXRpb24g
aW4gaXQgdG8gcG9wdWxhdGUgdGhlIGdlbmVyaWMKICogcmVzb3VyY2Ugb2JqZWN0IHBvaW50
ZWQgdG8gYnkgQHJlcy4KICoKICogUmV0dXJuOgogKiAxKSBmYWxzZSB3aXRoIHJlcy0+Zmxh
Z3Mgc2V0dGluZyB0byB6ZXJvOiBub3QgdGhlIGV4cGVjdGVkIHJlc291cmNlIHR5cGUKICog
MikgZmFsc2Ugd2l0aCBJT1JFU09VUkNFX0RJU0FCTEVEIGluIHJlcy0+ZmxhZ3M6IHZhbGlk
IHVuYXNzaWduZWQgcmVzb3VyY2UKICogMykgdHJ1ZTogdmFsaWQgYXNzaWduZWQgcmVzb3Vy
Y2UKICovCmJvb2wgYWNwaV9kZXZfcmVzb3VyY2VfbWVtb3J5KHN0cnVjdCBhY3BpX3Jlc291
cmNlICphcmVzLCBzdHJ1Y3QgcmVzb3VyY2UgKnJlcykKewoJc3RydWN0IGFjcGlfcmVzb3Vy
Y2VfbWVtb3J5MjQgKm1lbW9yeTI0OwoJc3RydWN0IGFjcGlfcmVzb3VyY2VfbWVtb3J5MzIg
Km1lbW9yeTMyOwoJc3RydWN0IGFjcGlfcmVzb3VyY2VfZml4ZWRfbWVtb3J5MzIgKmZpeGVk
X21lbW9yeTMyOwoKCXN3aXRjaCAoYXJlcy0+dHlwZSkgewoJY2FzZSBBQ1BJX1JFU09VUkNF
X1RZUEVfTUVNT1JZMjQ6CgkJbWVtb3J5MjQgPSAmYXJlcy0+ZGF0YS5tZW1vcnkyNDsKCQlh
Y3BpX2Rldl9nZXRfbWVtcmVzb3VyY2UocmVzLCBtZW1vcnkyNC0+bWluaW11bSA8PCA4LAoJ
CQkJCSBtZW1vcnkyNC0+YWRkcmVzc19sZW5ndGggPDwgOCwKCQkJCQkgbWVtb3J5MjQtPndy
aXRlX3Byb3RlY3QpOwoJCWJyZWFrOwoJY2FzZSBBQ1BJX1JFU09VUkNFX1RZUEVfTUVNT1JZ
MzI6CgkJbWVtb3J5MzIgPSAmYXJlcy0+ZGF0YS5tZW1vcnkzMjsKCQlhY3BpX2Rldl9nZXRf
bWVtcmVzb3VyY2UocmVzLCBtZW1vcnkzMi0+bWluaW11bSwKCQkJCQkgbWVtb3J5MzItPmFk
ZHJlc3NfbGVuZ3RoLAoJCQkJCSBtZW1vcnkzMi0+d3JpdGVfcHJvdGVjdCk7CgkJYnJlYWs7
CgljYXNlIEFDUElfUkVTT1VSQ0VfVFlQRV9GSVhFRF9NRU1PUlkzMjoKCQlmaXhlZF9tZW1v
cnkzMiA9ICZhcmVzLT5kYXRhLmZpeGVkX21lbW9yeTMyOwoJCWFjcGlfZGV2X2dldF9tZW1y
ZXNvdXJjZShyZXMsIGZpeGVkX21lbW9yeTMyLT5hZGRyZXNzLAoJCQkJCSBmaXhlZF9tZW1v
cnkzMi0+YWRkcmVzc19sZW5ndGgsCgkJCQkJIGZpeGVkX21lbW9yeTMyLT53cml0ZV9wcm90
ZWN0KTsKCQlicmVhazsKCWRlZmF1bHQ6CgkJcmVzLT5mbGFncyA9IDA7CgkJcmV0dXJuIGZh
bHNlOwoJfQoKCXJldHVybiAhKHJlcy0+ZmxhZ3MgJiBJT1JFU09VUkNFX0RJU0FCTEVEKTsK
fQpFWFBPUlRfU1lNQk9MX0dQTChhY3BpX2Rldl9yZXNvdXJjZV9tZW1vcnkpOwoKc3RhdGlj
IHZvaWQgYWNwaV9kZXZfaW9yZXNvdXJjZV9mbGFncyhzdHJ1Y3QgcmVzb3VyY2UgKnJlcywg
dTY0IGxlbiwKCQkJCSAgICAgIHU4IGlvX2RlY29kZSwgdTggdHJhbnNsYXRpb25fdHlwZSkK
ewoJcmVzLT5mbGFncyA9IElPUkVTT1VSQ0VfSU87CgoJaWYgKCFhY3BpX2Rldl9yZXNvdXJj
ZV9sZW5fdmFsaWQocmVzLT5zdGFydCwgcmVzLT5lbmQsIGxlbiwgdHJ1ZSkpCgkJcmVzLT5m
bGFncyB8PSBJT1JFU09VUkNFX0RJU0FCTEVEIHwgSU9SRVNPVVJDRV9VTlNFVDsKCglpZiAo
IWFjcGlfaW9zcGFjZV9yZXNvdXJjZV92YWxpZChyZXMpKQoJCXJlcy0+ZmxhZ3MgfD0gSU9S
RVNPVVJDRV9ESVNBQkxFRCB8IElPUkVTT1VSQ0VfVU5TRVQ7CgoJaWYgKGlvX2RlY29kZSA9
PSBBQ1BJX0RFQ09ERV8xNikKCQlyZXMtPmZsYWdzIHw9IElPUkVTT1VSQ0VfSU9fMTZCSVRf
QUREUjsKCWlmICh0cmFuc2xhdGlvbl90eXBlID09IEFDUElfU1BBUlNFX1RSQU5TTEFUSU9O
KQoJCXJlcy0+ZmxhZ3MgfD0gSU9SRVNPVVJDRV9JT19TUEFSU0U7Cn0KCnN0YXRpYyB2b2lk
IGFjcGlfZGV2X2dldF9pb3Jlc291cmNlKHN0cnVjdCByZXNvdXJjZSAqcmVzLCB1NjQgc3Rh
cnQsIHU2NCBsZW4sCgkJCQkgICAgdTggaW9fZGVjb2RlKQp7CglyZXMtPnN0YXJ0ID0gc3Rh
cnQ7CglyZXMtPmVuZCA9IHN0YXJ0ICsgbGVuIC0gMTsKCWFjcGlfZGV2X2lvcmVzb3VyY2Vf
ZmxhZ3MocmVzLCBsZW4sIGlvX2RlY29kZSwgMCk7Cn0KCi8qKgogKiBhY3BpX2Rldl9yZXNv
dXJjZV9pbyAtIEV4dHJhY3QgQUNQSSBJL08gcmVzb3VyY2UgaW5mb3JtYXRpb24uCiAqIEBh
cmVzOiBJbnB1dCBBQ1BJIHJlc291cmNlIG9iamVjdC4KICogQHJlczogT3V0cHV0IGdlbmVy
aWMgcmVzb3VyY2Ugb2JqZWN0LgogKgogKiBDaGVjayBpZiB0aGUgZ2l2ZW4gQUNQSSByZXNv
dXJjZSBvYmplY3QgcmVwcmVzZW50cyBhbiBJL08gcmVzb3VyY2UgYW5kCiAqIGlmIHRoYXQn
cyB0aGUgY2FzZSwgdXNlIHRoZSBpbmZvcm1hdGlvbiBpbiBpdCB0byBwb3B1bGF0ZSB0aGUg
Z2VuZXJpYwogKiByZXNvdXJjZSBvYmplY3QgcG9pbnRlZCB0byBieSBAcmVzLgogKgogKiBS
ZXR1cm46CiAqIDEpIGZhbHNlIHdpdGggcmVzLT5mbGFncyBzZXR0aW5nIHRvIHplcm86IG5v
dCB0aGUgZXhwZWN0ZWQgcmVzb3VyY2UgdHlwZQogKiAyKSBmYWxzZSB3aXRoIElPUkVTT1VS
Q0VfRElTQUJMRUQgaW4gcmVzLT5mbGFnczogdmFsaWQgdW5hc3NpZ25lZCByZXNvdXJjZQog
KiAzKSB0cnVlOiB2YWxpZCBhc3NpZ25lZCByZXNvdXJjZQogKi8KYm9vbCBhY3BpX2Rldl9y
ZXNvdXJjZV9pbyhzdHJ1Y3QgYWNwaV9yZXNvdXJjZSAqYXJlcywgc3RydWN0IHJlc291cmNl
ICpyZXMpCnsKCXN0cnVjdCBhY3BpX3Jlc291cmNlX2lvICppbzsKCXN0cnVjdCBhY3BpX3Jl
c291cmNlX2ZpeGVkX2lvICpmaXhlZF9pbzsKCglzd2l0Y2ggKGFyZXMtPnR5cGUpIHsKCWNh
c2UgQUNQSV9SRVNPVVJDRV9UWVBFX0lPOgoJCWlvID0gJmFyZXMtPmRhdGEuaW87CgkJYWNw
aV9kZXZfZ2V0X2lvcmVzb3VyY2UocmVzLCBpby0+bWluaW11bSwKCQkJCQlpby0+YWRkcmVz
c19sZW5ndGgsCgkJCQkJaW8tPmlvX2RlY29kZSk7CgkJYnJlYWs7CgljYXNlIEFDUElfUkVT
T1VSQ0VfVFlQRV9GSVhFRF9JTzoKCQlmaXhlZF9pbyA9ICZhcmVzLT5kYXRhLmZpeGVkX2lv
OwoJCWFjcGlfZGV2X2dldF9pb3Jlc291cmNlKHJlcywgZml4ZWRfaW8tPmFkZHJlc3MsCgkJ
CQkJZml4ZWRfaW8tPmFkZHJlc3NfbGVuZ3RoLAoJCQkJCUFDUElfREVDT0RFXzEwKTsKCQli
cmVhazsKCWRlZmF1bHQ6CgkJcmVzLT5mbGFncyA9IDA7CgkJcmV0dXJuIGZhbHNlOwoJfQoK
CXJldHVybiAhKHJlcy0+ZmxhZ3MgJiBJT1JFU09VUkNFX0RJU0FCTEVEKTsKfQpFWFBPUlRf
U1lNQk9MX0dQTChhY3BpX2Rldl9yZXNvdXJjZV9pbyk7CgpzdGF0aWMgYm9vbCBhY3BpX2Rl
Y29kZV9zcGFjZShzdHJ1Y3QgcmVzb3VyY2Vfd2luICp3aW4sCgkJCSAgICAgIHN0cnVjdCBh
Y3BpX3Jlc291cmNlX2FkZHJlc3MgKmFkZHIsCgkJCSAgICAgIHN0cnVjdCBhY3BpX2FkZHJl
c3M2NF9hdHRyaWJ1dGUgKmF0dHIpCnsKCXU4IGlvZGVjID0gYXR0ci0+Z3JhbnVsYXJpdHkg
PT0gMHhmZmYgPyBBQ1BJX0RFQ09ERV8xMCA6IEFDUElfREVDT0RFXzE2OwoJYm9vbCB3cCA9
IGFkZHItPmluZm8ubWVtLndyaXRlX3Byb3RlY3Q7Cgl1NjQgbGVuID0gYXR0ci0+YWRkcmVz
c19sZW5ndGg7Cgl1NjQgc3RhcnQsIGVuZCwgb2Zmc2V0ID0gMDsKCXN0cnVjdCByZXNvdXJj
ZSAqcmVzID0gJndpbi0+cmVzOwoKCS8qCgkgKiBGaWx0ZXIgb3V0IGludmFsaWQgZGVzY3Jp
cHRvciBhY2NvcmRpbmcgdG8gQUNQSSBTcGVjIDUuMCwgc2VjdGlvbgoJICogNi40LjMuNSBB
ZGRyZXNzIFNwYWNlIFJlc291cmNlIERlc2NyaXB0b3JzLgoJICovCglpZiAoKGFkZHItPm1p
bl9hZGRyZXNzX2ZpeGVkICE9IGFkZHItPm1heF9hZGRyZXNzX2ZpeGVkICYmIGxlbikgfHwK
CSAgICAoYWRkci0+bWluX2FkZHJlc3NfZml4ZWQgJiYgYWRkci0+bWF4X2FkZHJlc3NfZml4
ZWQgJiYgIWxlbikpCgkJcHJfZGVidWcoIkFDUEk6IEludmFsaWQgYWRkcmVzcyBzcGFjZSBt
aW5fYWRkcl9maXggJWQsIG1heF9hZGRyX2ZpeCAlZCwgbGVuICVsbHhcbiIsCgkJCSBhZGRy
LT5taW5fYWRkcmVzc19maXhlZCwgYWRkci0+bWF4X2FkZHJlc3NfZml4ZWQsIGxlbik7CgoJ
LyoKCSAqIEZvciBicmlkZ2VzIHRoYXQgdHJhbnNsYXRlIGFkZHJlc3NlcyBhY3Jvc3MgdGhl
IGJyaWRnZSwKCSAqIHRyYW5zbGF0aW9uX29mZnNldCBpcyB0aGUgb2Zmc2V0IHRoYXQgbXVz
dCBiZSBhZGRlZCB0byB0aGUKCSAqIGFkZHJlc3Mgb24gdGhlIHNlY29uZGFyeSBzaWRlIHRv
IG9idGFpbiB0aGUgYWRkcmVzcyBvbiB0aGUKCSAqIHByaW1hcnkgc2lkZS4gTm9uLWJyaWRn
ZSBkZXZpY2VzIG11c3QgbGlzdCAwIGZvciBhbGwgQWRkcmVzcwoJICogVHJhbnNsYXRpb24g
b2Zmc2V0IGJpdHMuCgkgKi8KCWlmIChhZGRyLT5wcm9kdWNlcl9jb25zdW1lciA9PSBBQ1BJ
X1BST0RVQ0VSKQoJCW9mZnNldCA9IGF0dHItPnRyYW5zbGF0aW9uX29mZnNldDsKCWVsc2Ug
aWYgKGF0dHItPnRyYW5zbGF0aW9uX29mZnNldCkKCQlwcl9kZWJ1ZygiQUNQSTogdHJhbnNs
YXRpb25fb2Zmc2V0KCVsbGQpIGlzIGludmFsaWQgZm9yIG5vbi1icmlkZ2UgZGV2aWNlLlxu
IiwKCQkJIGF0dHItPnRyYW5zbGF0aW9uX29mZnNldCk7CglzdGFydCA9IGF0dHItPm1pbmlt
dW0gKyBvZmZzZXQ7CgllbmQgPSBhdHRyLT5tYXhpbXVtICsgb2Zmc2V0OwoKCXdpbi0+b2Zm
c2V0ID0gb2Zmc2V0OwoJcmVzLT5zdGFydCA9IHN0YXJ0OwoJcmVzLT5lbmQgPSBlbmQ7Cglp
ZiAoc2l6ZW9mKHJlc291cmNlX3NpemVfdCkgPCBzaXplb2YodTY0KSAmJgoJICAgIChvZmZz
ZXQgIT0gd2luLT5vZmZzZXQgfHwgc3RhcnQgIT0gcmVzLT5zdGFydCB8fCBlbmQgIT0gcmVz
LT5lbmQpKSB7CgkJcHJfd2FybigiYWNwaSByZXNvdXJjZSB3aW5kb3cgKFslI2xseC0lI2xs
eF0gaWdub3JlZCwgbm90IENQVSBhZGRyZXNzYWJsZSlcbiIsCgkJCWF0dHItPm1pbmltdW0s
IGF0dHItPm1heGltdW0pOwoJCXJldHVybiBmYWxzZTsKCX0KCglzd2l0Y2ggKGFkZHItPnJl
c291cmNlX3R5cGUpIHsKCWNhc2UgQUNQSV9NRU1PUllfUkFOR0U6CgkJYWNwaV9kZXZfbWVt
cmVzb3VyY2VfZmxhZ3MocmVzLCBsZW4sIHdwKTsKCQlicmVhazsKCWNhc2UgQUNQSV9JT19S
QU5HRToKCQlhY3BpX2Rldl9pb3Jlc291cmNlX2ZsYWdzKHJlcywgbGVuLCBpb2RlYywKCQkJ
CQkgIGFkZHItPmluZm8uaW8udHJhbnNsYXRpb25fdHlwZSk7CgkJYnJlYWs7CgljYXNlIEFD
UElfQlVTX05VTUJFUl9SQU5HRToKCQlyZXMtPmZsYWdzID0gSU9SRVNPVVJDRV9CVVM7CgkJ
YnJlYWs7CglkZWZhdWx0OgoJCXJldHVybiBmYWxzZTsKCX0KCglpZiAoYWRkci0+cHJvZHVj
ZXJfY29uc3VtZXIgPT0gQUNQSV9QUk9EVUNFUikKCQlyZXMtPmZsYWdzIHw9IElPUkVTT1VS
Q0VfV0lORE9XOwoKCWlmIChhZGRyLT5pbmZvLm1lbS5jYWNoaW5nID09IEFDUElfUFJFRkVU
Q0hBQkxFX01FTU9SWSkKCQlyZXMtPmZsYWdzIHw9IElPUkVTT1VSQ0VfUFJFRkVUQ0g7CgoJ
cmV0dXJuICEocmVzLT5mbGFncyAmIElPUkVTT1VSQ0VfRElTQUJMRUQpOwp9CgovKioKICog
YWNwaV9kZXZfcmVzb3VyY2VfYWRkcmVzc19zcGFjZSAtIEV4dHJhY3QgQUNQSSBhZGRyZXNz
IHNwYWNlIGluZm9ybWF0aW9uLgogKiBAYXJlczogSW5wdXQgQUNQSSByZXNvdXJjZSBvYmpl
Y3QuCiAqIEB3aW46IE91dHB1dCBnZW5lcmljIHJlc291cmNlIG9iamVjdC4KICoKICogQ2hl
Y2sgaWYgdGhlIGdpdmVuIEFDUEkgcmVzb3VyY2Ugb2JqZWN0IHJlcHJlc2VudHMgYW4gYWRk
cmVzcyBzcGFjZSByZXNvdXJjZQogKiBhbmQgaWYgdGhhdCdzIHRoZSBjYXNlLCB1c2UgdGhl
IGluZm9ybWF0aW9uIGluIGl0IHRvIHBvcHVsYXRlIHRoZSBnZW5lcmljCiAqIHJlc291cmNl
IG9iamVjdCBwb2ludGVkIHRvIGJ5IEB3aW4uCiAqCiAqIFJldHVybjoKICogMSkgZmFsc2Ug
d2l0aCB3aW4tPnJlcy5mbGFncyBzZXR0aW5nIHRvIHplcm86IG5vdCB0aGUgZXhwZWN0ZWQg
cmVzb3VyY2UgdHlwZQogKiAyKSBmYWxzZSB3aXRoIElPUkVTT1VSQ0VfRElTQUJMRUQgaW4g
d2luLT5yZXMuZmxhZ3M6IHZhbGlkIHVuYXNzaWduZWQKICogICAgcmVzb3VyY2UKICogMykg
dHJ1ZTogdmFsaWQgYXNzaWduZWQgcmVzb3VyY2UKICovCmJvb2wgYWNwaV9kZXZfcmVzb3Vy
Y2VfYWRkcmVzc19zcGFjZShzdHJ1Y3QgYWNwaV9yZXNvdXJjZSAqYXJlcywKCQkJCSAgICAg
c3RydWN0IHJlc291cmNlX3dpbiAqd2luKQp7CglzdHJ1Y3QgYWNwaV9yZXNvdXJjZV9hZGRy
ZXNzNjQgYWRkcjsKCgl3aW4tPnJlcy5mbGFncyA9IDA7CglpZiAoQUNQSV9GQUlMVVJFKGFj
cGlfcmVzb3VyY2VfdG9fYWRkcmVzczY0KGFyZXMsICZhZGRyKSkpCgkJcmV0dXJuIGZhbHNl
OwoKCXJldHVybiBhY3BpX2RlY29kZV9zcGFjZSh3aW4sIChzdHJ1Y3QgYWNwaV9yZXNvdXJj
ZV9hZGRyZXNzICopJmFkZHIsCgkJCQkgJmFkZHIuYWRkcmVzcyk7Cn0KRVhQT1JUX1NZTUJP
TF9HUEwoYWNwaV9kZXZfcmVzb3VyY2VfYWRkcmVzc19zcGFjZSk7CgovKioKICogYWNwaV9k
ZXZfcmVzb3VyY2VfZXh0X2FkZHJlc3Nfc3BhY2UgLSBFeHRyYWN0IEFDUEkgYWRkcmVzcyBz
cGFjZSBpbmZvcm1hdGlvbi4KICogQGFyZXM6IElucHV0IEFDUEkgcmVzb3VyY2Ugb2JqZWN0
LgogKiBAd2luOiBPdXRwdXQgZ2VuZXJpYyByZXNvdXJjZSBvYmplY3QuCiAqCiAqIENoZWNr
IGlmIHRoZSBnaXZlbiBBQ1BJIHJlc291cmNlIG9iamVjdCByZXByZXNlbnRzIGFuIGV4dGVu
ZGVkIGFkZHJlc3Mgc3BhY2UKICogcmVzb3VyY2UgYW5kIGlmIHRoYXQncyB0aGUgY2FzZSwg
dXNlIHRoZSBpbmZvcm1hdGlvbiBpbiBpdCB0byBwb3B1bGF0ZSB0aGUKICogZ2VuZXJpYyBy
ZXNvdXJjZSBvYmplY3QgcG9pbnRlZCB0byBieSBAd2luLgogKgogKiBSZXR1cm46CiAqIDEp
IGZhbHNlIHdpdGggd2luLT5yZXMuZmxhZ3Mgc2V0dGluZyB0byB6ZXJvOiBub3QgdGhlIGV4
cGVjdGVkIHJlc291cmNlIHR5cGUKICogMikgZmFsc2Ugd2l0aCBJT1JFU09VUkNFX0RJU0FC
TEVEIGluIHdpbi0+cmVzLmZsYWdzOiB2YWxpZCB1bmFzc2lnbmVkCiAqICAgIHJlc291cmNl
CiAqIDMpIHRydWU6IHZhbGlkIGFzc2lnbmVkIHJlc291cmNlCiAqLwpib29sIGFjcGlfZGV2
X3Jlc291cmNlX2V4dF9hZGRyZXNzX3NwYWNlKHN0cnVjdCBhY3BpX3Jlc291cmNlICphcmVz
LAoJCQkJCSBzdHJ1Y3QgcmVzb3VyY2Vfd2luICp3aW4pCnsKCXN0cnVjdCBhY3BpX3Jlc291
cmNlX2V4dGVuZGVkX2FkZHJlc3M2NCAqZXh0X2FkZHI7CgoJd2luLT5yZXMuZmxhZ3MgPSAw
OwoJaWYgKGFyZXMtPnR5cGUgIT0gQUNQSV9SRVNPVVJDRV9UWVBFX0VYVEVOREVEX0FERFJF
U1M2NCkKCQlyZXR1cm4gZmFsc2U7CgoJZXh0X2FkZHIgPSAmYXJlcy0+ZGF0YS5leHRfYWRk
cmVzczY0OwoKCXJldHVybiBhY3BpX2RlY29kZV9zcGFjZSh3aW4sIChzdHJ1Y3QgYWNwaV9y
ZXNvdXJjZV9hZGRyZXNzICopZXh0X2FkZHIsCgkJCQkgJmV4dF9hZGRyLT5hZGRyZXNzKTsK
fQpFWFBPUlRfU1lNQk9MX0dQTChhY3BpX2Rldl9yZXNvdXJjZV9leHRfYWRkcmVzc19zcGFj
ZSk7CgovKioKICogYWNwaV9kZXZfaXJxX2ZsYWdzIC0gRGV0ZXJtaW5lIElSUSByZXNvdXJj
ZSBmbGFncy4KICogQHRyaWdnZXJpbmc6IFRyaWdnZXJpbmcgdHlwZSBhcyBwcm92aWRlZCBi
eSBBQ1BJLgogKiBAcG9sYXJpdHk6IEludGVycnVwdCBwb2xhcml0eSBhcyBwcm92aWRlZCBi
eSBBQ1BJLgogKiBAc2hhcmVhYmxlOiBXaGV0aGVyIG9yIG5vdCB0aGUgaW50ZXJydXB0IGlz
IHNoYXJlYWJsZS4KICogQHdha2VfY2FwYWJsZTogV2FrZSBjYXBhYmlsaXR5IGFzIHByb3Zp
ZGVkIGJ5IEFDUEkuCiAqLwp1bnNpZ25lZCBsb25nIGFjcGlfZGV2X2lycV9mbGFncyh1OCB0
cmlnZ2VyaW5nLCB1OCBwb2xhcml0eSwgdTggc2hhcmVhYmxlLCB1OCB3YWtlX2NhcGFibGUp
CnsKCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CgoJaWYgKHRyaWdnZXJpbmcgPT0gQUNQSV9MRVZF
TF9TRU5TSVRJVkUpCgkJZmxhZ3MgPSBwb2xhcml0eSA9PSBBQ1BJX0FDVElWRV9MT1cgPwoJ
CQlJT1JFU09VUkNFX0lSUV9MT1dMRVZFTCA6IElPUkVTT1VSQ0VfSVJRX0hJR0hMRVZFTDsK
CWVsc2UKCQlmbGFncyA9IHBvbGFyaXR5ID09IEFDUElfQUNUSVZFX0xPVyA/CgkJCUlPUkVT
T1VSQ0VfSVJRX0xPV0VER0UgOiBJT1JFU09VUkNFX0lSUV9ISUdIRURHRTsKCglpZiAoc2hh
cmVhYmxlID09IEFDUElfU0hBUkVEKQoJCWZsYWdzIHw9IElPUkVTT1VSQ0VfSVJRX1NIQVJF
QUJMRTsKCglpZiAod2FrZV9jYXBhYmxlID09IEFDUElfV0FLRV9DQVBBQkxFKQoJCWZsYWdz
IHw9IElPUkVTT1VSQ0VfSVJRX1dBS0VDQVBBQkxFOwoKCXJldHVybiBmbGFncyB8IElPUkVT
T1VSQ0VfSVJROwp9CkVYUE9SVF9TWU1CT0xfR1BMKGFjcGlfZGV2X2lycV9mbGFncyk7Cgov
KioKICogYWNwaV9kZXZfZ2V0X2lycV90eXBlIC0gRGV0ZXJtaW5lIGlycSB0eXBlLgogKiBA
dHJpZ2dlcmluZzogVHJpZ2dlcmluZyB0eXBlIGFzIHByb3ZpZGVkIGJ5IEFDUEkuCiAqIEBw
b2xhcml0eTogSW50ZXJydXB0IHBvbGFyaXR5IGFzIHByb3ZpZGVkIGJ5IEFDUEkuCiAqLwp1
bnNpZ25lZCBpbnQgYWNwaV9kZXZfZ2V0X2lycV90eXBlKGludCB0cmlnZ2VyaW5nLCBpbnQg
cG9sYXJpdHkpCnsKCXN3aXRjaCAocG9sYXJpdHkpIHsKCWNhc2UgQUNQSV9BQ1RJVkVfTE9X
OgoJCXJldHVybiB0cmlnZ2VyaW5nID09IEFDUElfRURHRV9TRU5TSVRJVkUgPwoJCSAgICAg
ICBJUlFfVFlQRV9FREdFX0ZBTExJTkcgOgoJCSAgICAgICBJUlFfVFlQRV9MRVZFTF9MT1c7
CgljYXNlIEFDUElfQUNUSVZFX0hJR0g6CgkJcmV0dXJuIHRyaWdnZXJpbmcgPT0gQUNQSV9F
REdFX1NFTlNJVElWRSA/CgkJICAgICAgIElSUV9UWVBFX0VER0VfUklTSU5HIDoKCQkgICAg
ICAgSVJRX1RZUEVfTEVWRUxfSElHSDsKCWNhc2UgQUNQSV9BQ1RJVkVfQk9USDoKCQlpZiAo
dHJpZ2dlcmluZyA9PSBBQ1BJX0VER0VfU0VOU0lUSVZFKQoJCQlyZXR1cm4gSVJRX1RZUEVf
RURHRV9CT1RIOwoJCWZhbGx0aHJvdWdoOwoJZGVmYXVsdDoKCQlyZXR1cm4gSVJRX1RZUEVf
Tk9ORTsKCX0KfQpFWFBPUlRfU1lNQk9MX0dQTChhY3BpX2Rldl9nZXRfaXJxX3R5cGUpOwoK
LyoKICogRE1JIG1hdGNoZXMgZm9yIGJvYXJkcyB3aGVyZSB0aGUgRFNEVCBzcGVjaWZpZXMg
dGhlIGtiZCBJUlEgYXMKICogbGV2ZWwgYWN0aXZlLWxvdyBhbmQgdXNpbmcgdGhlIG92ZXJy
aWRlIGNoYW5nZXMgdGhpcyB0byByaXNpbmcgZWRnZSwKICogc3RvcHBpbmcgdGhlIGtleWJv
YXJkIGZyb20gd29ya2luZy4KICovCnN0YXRpYyBjb25zdCBzdHJ1Y3QgZG1pX3N5c3RlbV9p
ZCBpcnExX2xldmVsX2xvd19za2lwX292ZXJyaWRlW10gPSB7Cgl7CgkJLyogTUVESU9OIFAx
NTY1MSAqLwoJCS5tYXRjaGVzID0gewoJCQlETUlfTUFUQ0goRE1JX1NZU19WRU5ET1IsICJN
RURJT04iKSwKCQkJRE1JX01BVENIKERNSV9CT0FSRF9OQU1FLCAiTTE1VCIpLAoJCX0sCgl9
LAoJewoJCS8qIE1FRElPTiBTMTc0MDUgKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01BVENI
KERNSV9TWVNfVkVORE9SLCAiTUVESU9OIiksCgkJCURNSV9NQVRDSChETUlfQk9BUkRfTkFN
RSwgIk0xN1QiKSwKCQl9LAoJfSwKCXsKCQkvKiBNRURJT04gUzE3NDEzICovCgkJLm1hdGNo
ZXMgPSB7CgkJCURNSV9NQVRDSChETUlfU1lTX1ZFTkRPUiwgIk1FRElPTiIpLAoJCQlETUlf
TUFUQ0goRE1JX0JPQVJEX05BTUUsICJNMXhBIiksCgkJfSwKCX0sCgl7CgkJLyogQXN1cyBW
aXZvYm9vayBLMzQwMlpBICovCgkJLm1hdGNoZXMgPSB7CgkJCURNSV9NQVRDSChETUlfU1lT
X1ZFTkRPUiwgIkFTVVNUZUsgQ09NUFVURVIgSU5DLiIpLAoJCQlETUlfTUFUQ0goRE1JX0JP
QVJEX05BTUUsICJLMzQwMlpBIiksCgkJfSwKCX0sCgl7CgkJLyogQXN1cyBWaXZvYm9vayBL
MzUwMlpBICovCgkJLm1hdGNoZXMgPSB7CgkJCURNSV9NQVRDSChETUlfU1lTX1ZFTkRPUiwg
IkFTVVNUZUsgQ09NUFVURVIgSU5DLiIpLAoJCQlETUlfTUFUQ0goRE1JX0JPQVJEX05BTUUs
ICJLMzUwMlpBIiksCgkJfSwKCX0sCgl7CgkJLyogQXN1cyBWaXZvYm9vayBTNTQwMlpBICov
CgkJLm1hdGNoZXMgPSB7CgkJCURNSV9NQVRDSChETUlfU1lTX1ZFTkRPUiwgIkFTVVNUZUsg
Q09NUFVURVIgSU5DLiIpLAoJCQlETUlfTUFUQ0goRE1JX0JPQVJEX05BTUUsICJTNTQwMlpB
IiksCgkJfSwKCX0sCgl7CgkJLyogQXN1cyBWaXZvYm9vayBTNTYwMlpBICovCgkJLm1hdGNo
ZXMgPSB7CgkJCURNSV9NQVRDSChETUlfU1lTX1ZFTkRPUiwgIkFTVVNUZUsgQ09NUFVURVIg
SU5DLiIpLAoJCQlETUlfTUFUQ0goRE1JX0JPQVJEX05BTUUsICJTNTYwMlpBIiksCgkJfSwK
CX0sCgl7CgkJLyogQXN1cyBWaXZvYm9vayBYMTcwNFYgKi8KCQkubWF0Y2hlcyA9IHsKCQkJ
RE1JX01BVENIKERNSV9TWVNfVkVORE9SLCAiQVNVU1RlSyBDT01QVVRFUiBJTkMuIiksCgkJ
CURNSV9NQVRDSChETUlfQk9BUkRfTkFNRSwgIlgxNzA0VkFQIiksCgkJfSwKCX0sCgl7CgkJ
LyogQXN1cyBFeHBlcnRCb29rIEIxNDAyQ0JBICovCgkJLm1hdGNoZXMgPSB7CgkJCURNSV9N
QVRDSChETUlfU1lTX1ZFTkRPUiwgIkFTVVNUZUsgQ09NUFVURVIgSU5DLiIpLAoJCQlETUlf
TUFUQ0goRE1JX0JPQVJEX05BTUUsICJCMTQwMkNCQSIpLAoJCX0sCgl9LAoJewoJCS8qIEFz
dXMgRXhwZXJ0Qm9vayBCMTQwMkNWQSAqLwoJCS5tYXRjaGVzID0gewoJCQlETUlfTUFUQ0go
RE1JX1NZU19WRU5ET1IsICJBU1VTVGVLIENPTVBVVEVSIElOQy4iKSwKCQkJRE1JX01BVENI
KERNSV9CT0FSRF9OQU1FLCAiQjE0MDJDVkEiKSwKCQl9LAoJfSwKCXsKCQkvKiBBc3VzIEV4
cGVydEJvb2sgQjE1MDJDQkEgKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01BVENIKERNSV9T
WVNfVkVORE9SLCAiQVNVU1RlSyBDT01QVVRFUiBJTkMuIiksCgkJCURNSV9NQVRDSChETUlf
Qk9BUkRfTkFNRSwgIkIxNTAyQ0JBIiksCgkJfSwKCX0sCgl7CgkJLyogQXN1cyBFeHBlcnRC
b29rIEIxNTAyQ0dBICovCgkJLm1hdGNoZXMgPSB7CgkJCURNSV9NQVRDSChETUlfU1lTX1ZF
TkRPUiwgIkFTVVNUZUsgQ09NUFVURVIgSU5DLiIpLAoJCQlETUlfTUFUQ0goRE1JX0JPQVJE
X05BTUUsICJCMTUwMkNHQSIpLAoJCX0sCgl9LAogICAgICAgIHsKICAgICAgICAgICAgICAg
IC8qIEFzdXMgRXhwZXJ0Qm9vayBCMTUwMkNWQSAqLwogICAgICAgICAgICAgICAgLm1hdGNo
ZXMgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIERNSV9NQVRDSChETUlfU1lTX1ZFTkRP
UiwgIkFTVVNUZUsgQ09NUFVURVIgSU5DLiIpLAogICAgICAgICAgICAgICAgICAgICAgICBE
TUlfTUFUQ0goRE1JX0JPQVJEX05BTUUsICJCMTUwMkNWQSIpLAogICAgICAgICAgICAgICAg
fSwKICAgICAgICB9LAoJewoJCS8qIEFzdXMgRXhwZXJ0Qm9vayBCMjQwMkNCQSAqLwoJCS5t
YXRjaGVzID0gewoJCQlETUlfTUFUQ0goRE1JX1NZU19WRU5ET1IsICJBU1VTVGVLIENPTVBV
VEVSIElOQy4iKSwKCQkJRE1JX01BVENIKERNSV9CT0FSRF9OQU1FLCAiQjI0MDJDQkEiKSwK
CQl9LAoJfSwKCXsKCQkvKiBBc3VzIEV4cGVydEJvb2sgQjI0MDJGQkEgKi8KCQkubWF0Y2hl
cyA9IHsKCQkJRE1JX01BVENIKERNSV9TWVNfVkVORE9SLCAiQVNVU1RlSyBDT01QVVRFUiBJ
TkMuIiksCgkJCURNSV9NQVRDSChETUlfQk9BUkRfTkFNRSwgIkIyNDAyRkJBIiksCgkJfSwK
CX0sCgl7CgkJLyogQXN1cyBFeHBlcnRCb29rIEIyNTAyICovCgkJLm1hdGNoZXMgPSB7CgkJ
CURNSV9NQVRDSChETUlfU1lTX1ZFTkRPUiwgIkFTVVNUZUsgQ09NUFVURVIgSU5DLiIpLAoJ
CQlETUlfTUFUQ0goRE1JX0JPQVJEX05BTUUsICJCMjUwMkNCQSIpLAoJCX0sCgl9LAoJewoJ
CS8qIEFzdXMgRXhwZXJ0Qm9vayBCMjUwMkZCQSAqLwoJCS5tYXRjaGVzID0gewoJCQlETUlf
TUFUQ0goRE1JX1NZU19WRU5ET1IsICJBU1VTVGVLIENPTVBVVEVSIElOQy4iKSwKCQkJRE1J
X01BVENIKERNSV9CT0FSRF9OQU1FLCAiQjI1MDJGQkEiKSwKCQl9LAoJfSwKCXsKCQkvKiBB
c3VzIFZpdm9ib29rIEUxNTA0R0EgKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01BVENIKERN
SV9TWVNfVkVORE9SLCAiQVNVU1RlSyBDT01QVVRFUiBJTkMuIiksCgkJCURNSV9NQVRDSChE
TUlfQk9BUkRfTkFNRSwgIkUxNTA0R0EiKSwKCQl9LAoJfSwKCXsKCQkvKiBBc3VzIFZpdm9i
b29rIEUxNTA0R0FCICovCgkJLm1hdGNoZXMgPSB7CgkJCURNSV9NQVRDSChETUlfU1lTX1ZF
TkRPUiwgIkFTVVNUZUsgQ09NUFVURVIgSU5DLiIpLAoJCQlETUlfTUFUQ0goRE1JX0JPQVJE
X05BTUUsICJFMTUwNEdBQiIpLAoJCX0sCgl9LAoJewoJCS8qIEFzdXMgVml2b2Jvb2sgUHJv
IE42NTA2TVYgKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01BVENIKERNSV9TWVNfVkVORE9S
LCAiQVNVU1RlSyBDT01QVVRFUiBJTkMuIiksCgkJCURNSV9NQVRDSChETUlfQk9BUkRfTkFN
RSwgIk42NTA2TVYiKSwKCQl9LAoJfSwKCXsKCQkvKiBMRyBFbGVjdHJvbmljcyAxN1U3MFAg
Ki8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01BVENIKERNSV9TWVNfVkVORE9SLCAiTEcgRWxl
Y3Ryb25pY3MiKSwKCQkJRE1JX01BVENIKERNSV9CT0FSRF9OQU1FLCAiMTdVNzBQIiksCgkJ
fSwKCX0sCgl7IH0KfTsKCi8qCiAqIERNSSBtYXRjaGVzIGZvciBBTUQgWmVuIGJvYXJkcyB3
aGVyZSB0aGUgRFNEVCBzcGVjaWZpZXMgdGhlIGtiZCBJUlEKICogYXMgZmFsbGluZyBlZGdl
IGFuZCB0aGlzIG11c3QgYmUgb3ZlcnJpZGRlbiB0byByaXNpbmcgZWRnZSwKICogdG8gaGF2
ZSBhIHdvcmtpbmcga2V5Ym9hcmQuCiAqLwpzdGF0aWMgY29uc3Qgc3RydWN0IGRtaV9zeXN0
ZW1faWQgaXJxMV9lZGdlX2xvd19mb3JjZV9vdmVycmlkZVtdID0gewoJewoJCS8qIFhNRyBB
UEVYIDE3IChNMjMpICovCgkJLm1hdGNoZXMgPSB7CgkJCURNSV9NQVRDSChETUlfQk9BUkRf
TkFNRSwgIkdNeEJHeHgiKSwKCQl9LAoJfSwKCXsKCQkvKiBUb25nRmFuZyBHTXhSR3h4L1hN
RyBDT1JFIDE1IChNMjIpL1RVWEVETyBTdGVsbGFyaXMgMTUgR2VuNCBBTUQgKi8KCQkubWF0
Y2hlcyA9IHsKCQkJRE1JX01BVENIKERNSV9CT0FSRF9OQU1FLCAiR014Ukd4eCIpLAoJCX0s
Cgl9LAoJewoJCS8qIFRvbmdGYW5nIEdNeFhHeHgvVFVYRURPIFBvbGFyaXMgMTUgR2VuNSBB
TUQgKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01BVENIKERNSV9CT0FSRF9OQU1FLCAiR014
WEd4eCIpLAoJCX0sCgl9LAoJewoJCS8qIFRvbmdGYW5nIEdNeFhHeHggc29sZCBhcyBFbHVr
dHJvbmljcyBJbmMuIFJQLTE1ICovCgkJLm1hdGNoZXMgPSB7CgkJCURNSV9NQVRDSChETUlf
U1lTX1ZFTkRPUiwgIkVsdWt0cm9uaWNzIEluYy4iKSwKCQkJRE1JX01BVENIKERNSV9CT0FS
RF9OQU1FLCAiUlAtMTUiKSwKCQl9LAoJfSwKCXsKCQkvKiBUb25nRmFuZyBHTTZYR3hYL1RV
WEVETyBTdGVsbGFyaXMgMTYgR2VuNSBBTUQgKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01B
VENIKERNSV9CT0FSRF9OQU1FLCAiR002WEd4WCIpLAoJCX0sCgl9LAoJewoJCS8qIE1BSU5H
RUFSIFZlY3RvciBQcm8gMiAxNSAqLwoJCS5tYXRjaGVzID0gewoJCQlETUlfTUFUQ0goRE1J
X1NZU19WRU5ET1IsICJNaWNybyBFbGVjdHJvbmljcyBJbmMiKSwKCQkJRE1JX01BVENIKERN
SV9QUk9EVUNUX05BTUUsICJNRy1WQ1AyLTE1QTMwNzBUIiksCgkJfQoJfSwKCXsKCQkvKiBN
QUlOR0VBUiBWZWN0b3IgUHJvIDIgMTcgKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01BVENI
KERNSV9TWVNfVkVORE9SLCAiTWljcm8gRWxlY3Ryb25pY3MgSW5jIiksCgkJCURNSV9NQVRD
SChETUlfUFJPRFVDVF9OQU1FLCAiTUctVkNQMi0xN0EzMDcwVCIpLAoJCX0sCgl9LAoJewoJ
CS8qIFRvbmdGYW5nIEdNNkJHRVEgLyBQQ1NwZWNpYWxpc3QgRWxpbWluYSBQcm8gMTYgTSwg
UlRYIDMwNTAgKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01BVENIKERNSV9CT0FSRF9OQU1F
LCAiR002QkdFUSIpLAoJCX0sCgl9LAoJewoJCS8qIFRvbmdGYW5nIEdNNkJHNVEsIFJUWCA0
MDUwICovCgkJLm1hdGNoZXMgPSB7CgkJCURNSV9NQVRDSChETUlfQk9BUkRfTkFNRSwgIkdN
NkJHNVEiKSwKCQl9LAoJfSwKCXsKCQkvKiBUb25nRmFuZyBHTTZCRzBRIC8gUENTcGVjaWFs
aXN0IEVsaW1pbmEgUHJvIDE2IE0sIFJUWCA0MDYwICovCgkJLm1hdGNoZXMgPSB7CgkJCURN
SV9NQVRDSChETUlfQk9BUkRfTkFNRSwgIkdNNkJHMFEiKSwKCQl9LAoJfSwKCXsKCQkvKiBJ
bmZpbml0eSBFMTUtNUExNjUtQk0gKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01BVENIKERN
SV9CT0FSRF9OQU1FLCAiR001UkcxRTAwMDlDT00iKSwKCQl9LAoJfSwKCXsKCQkvKiBJbmZp
bml0eSBFMTUtNUEzMDUtMU0gKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01BVENIKERNSV9C
T0FSRF9OQU1FLCAiR001UkdFRTAwMTZDT00iKSwKCQl9LAoJfSwKCXsKCQkvKiBMdW5uZW4g
R3JvdW5kIDE1IC8gQU1EIFJ5emVuIDUgNTUwMFUgKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1J
X01BVENIKERNSV9TWVNfVkVORE9SLCAiTHVubmVuIiksCgkJCURNSV9NQVRDSChETUlfQk9B
UkRfTkFNRSwgIkxMTDVEQVciKSwKCQl9LAoJfSwKCXsKCQkvKiBMdW5uZW4gR3JvdW5kIDE2
IC8gQU1EIFJ5emVuIDcgNTgwMFUgKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01BVENIKERN
SV9TWVNfVkVORE9SLCAiTHVubmVuIiksCgkJCURNSV9NQVRDSChETUlfQk9BUkRfTkFNRSwg
IkxMNkZBIiksCgkJfSwKCX0sCgl7CgkJLyogTUFJQkVOQkVOIFg1NzcgKi8KCQkubWF0Y2hl
cyA9IHsKCQkJRE1JX01BVENIKERNSV9TWVNfVkVORE9SLCAiTUFJQkVOQkVOIiksCgkJCURN
SV9NQVRDSChETUlfQk9BUkRfTkFNRSwgIlg1NzciKSwKCQl9LAoJfSwKCXsKCQkvKiBNYWli
ZW5iZW4gWDU2NSAqLwoJCS5tYXRjaGVzID0gewoJCQlETUlfTUFUQ0goRE1JX1NZU19WRU5E
T1IsICJNQUlCRU5CRU4iKSwKCQkJRE1JX01BVENIKERNSV9CT0FSRF9OQU1FLCAiWDU2NSIp
LAoJCX0sCgl9LAoJewoJCS8qIFRvbmdGYW5nIEdYeEhSWHgvVFVYRURPIEluZmluaXR5Qm9v
ayBQcm8gR2VuOSBBTUQgKi8KCQkubWF0Y2hlcyA9IHsKCQkJRE1JX01BVENIKERNSV9CT0FS
RF9OQU1FLCAiR1h4SFJYeCIpLAoJCX0sCgl9LAoJewoJCS8qIFRvbmdGYW5nIEdNeEhHeHgv
VFVYRURPIFN0ZWxsYXJpcyBTbGltIEdlbjEgQU1EICovCgkJLm1hdGNoZXMgPSB7CgkJCURN
SV9NQVRDSChETUlfQk9BUkRfTkFNRSwgIkdNeEhHeHgiKSwKCQl9LAoJfSwKCXsgfQp9OwoK
c3RydWN0IGlycV9vdmVycmlkZV9jbXAgewoJY29uc3Qgc3RydWN0IGRtaV9zeXN0ZW1faWQg
KnN5c3RlbTsKCXVuc2lnbmVkIGNoYXIgaXJxOwoJdW5zaWduZWQgY2hhciB0cmlnZ2VyaW5n
OwoJdW5zaWduZWQgY2hhciBwb2xhcml0eTsKCXVuc2lnbmVkIGNoYXIgc2hhcmVhYmxlOwoJ
Ym9vbCBvdmVycmlkZTsKfTsKCnN0YXRpYyBjb25zdCBzdHJ1Y3QgaXJxX292ZXJyaWRlX2Nt
cCBvdmVycmlkZV90YWJsZVtdID0gewoJeyBpcnExX2xldmVsX2xvd19za2lwX292ZXJyaWRl
LCAxLCBBQ1BJX0xFVkVMX1NFTlNJVElWRSwgQUNQSV9BQ1RJVkVfTE9XLCAwLCBmYWxzZSB9
LAoJeyBpcnExX2VkZ2VfbG93X2ZvcmNlX292ZXJyaWRlLCAxLCBBQ1BJX0VER0VfU0VOU0lU
SVZFLCBBQ1BJX0FDVElWRV9MT1csIDEsIHRydWUgfSwKfTsKCnN0YXRpYyBib29sIGFjcGlf
ZGV2X2lycV9vdmVycmlkZSh1MzIgZ3NpLCB1OCB0cmlnZ2VyaW5nLCB1OCBwb2xhcml0eSwK
CQkJCSAgdTggc2hhcmVhYmxlKQp7CglpbnQgaTsKCglmb3IgKGkgPSAwOyBpIDwgQVJSQVlf
U0laRShvdmVycmlkZV90YWJsZSk7IGkrKykgewoJCWNvbnN0IHN0cnVjdCBpcnFfb3ZlcnJp
ZGVfY21wICplbnRyeSA9ICZvdmVycmlkZV90YWJsZVtpXTsKCgkJaWYgKGRtaV9jaGVja19z
eXN0ZW0oZW50cnktPnN5c3RlbSkgJiYKCQkgICAgZW50cnktPmlycSA9PSBnc2kgJiYKCQkg
ICAgZW50cnktPnRyaWdnZXJpbmcgPT0gdHJpZ2dlcmluZyAmJgoJCSAgICBlbnRyeS0+cG9s
YXJpdHkgPT0gcG9sYXJpdHkgJiYKCQkgICAgZW50cnktPnNoYXJlYWJsZSA9PSBzaGFyZWFi
bGUpCgkJCXJldHVybiBlbnRyeS0+b3ZlcnJpZGU7Cgl9CgojaWZkZWYgQ09ORklHX1g4NgoJ
LyoKCSAqIEFsd2F5cyB1c2UgdGhlIE1BRFQgb3ZlcnJpZGUgaW5mbywgZXhjZXB0IGZvciB0
aGUgaTgwNDIgUFMvMiBjdHJsCgkgKiBJUlFzICgxIGFuZCAxMikuIEZvciB0aGVzZSB0aGUg
RFNEVCBJUlEgc2V0dGluZ3Mgc2hvdWxkIHNvbWV0aW1lcwoJICogYmUgdXNlZCBvdGhlcndp
c2UgUFMvMiBrZXlib2FyZHMgLyBtaWNlIHdpbGwgbm90IHdvcmsuCgkgKi8KCWlmIChnc2kg
IT0gMSAmJiBnc2kgIT0gMTIpCgkJcmV0dXJuIHRydWU7CgoJLyogSWYgdGhlIG92ZXJyaWRl
IGNvbWVzIGZyb20gYW4gSU5UX1NSQ19PVlIgTUFEVCBlbnRyeSwgaG9ub3IgaXQuICovCglp
ZiAoYWNwaV9pbnRfc3JjX292cltnc2ldKQoJCXJldHVybiB0cnVlOwoKCS8qCgkgKiBJUlEg
b3ZlcnJpZGUgaXNuJ3QgbmVlZGVkIG9uIG1vZGVybiBBTUQgWmVuIHN5c3RlbXMgYW5kCgkg
KiB0aGlzIG92ZXJyaWRlIGJyZWFrcyBhY3RpdmUgbG93IElSUXMgb24gQU1EIFJ5emVuIDYw
MDAgYW5kCgkgKiBuZXdlciBzeXN0ZW1zLiBTa2lwIGl0LgoJICovCglpZiAoYm9vdF9jcHVf
aGFzKFg4Nl9GRUFUVVJFX1pFTikpCgkJcmV0dXJuIGZhbHNlOwojZW5kaWYKCglyZXR1cm4g
dHJ1ZTsKfQoKc3RhdGljIHZvaWQgYWNwaV9kZXZfZ2V0X2lycXJlc291cmNlKHN0cnVjdCBy
ZXNvdXJjZSAqcmVzLCB1MzIgZ3NpLAoJCQkJICAgICB1OCB0cmlnZ2VyaW5nLCB1OCBwb2xh
cml0eSwgdTggc2hhcmVhYmxlLAoJCQkJICAgICB1OCB3YWtlX2NhcGFibGUsIGJvb2wgY2hl
Y2tfb3ZlcnJpZGUpCnsKCWludCBpcnEsIHAsIHQ7CgoJaWYgKCF2YWxpZF9JUlEoZ3NpKSkg
ewoJCWlycXJlc291cmNlX2Rpc2FibGVkKHJlcywgZ3NpKTsKCQlyZXR1cm47Cgl9CgoJLyoK
CSAqIEluIElPLUFQSUMgbW9kZSwgdXNlIG92ZXJyaWRkZW4gYXR0cmlidXRlLiBUd28gcmVh
c29uczoKCSAqIDEuIEJJT1MgYnVnIGluIERTRFQKCSAqIDIuIEJJT1MgdXNlcyBJTy1BUElD
IG1vZGUgSW50ZXJydXB0IFNvdXJjZSBPdmVycmlkZQoJICoKCSAqIFdlIGRvIHRoaXMgb25s
eSBpZiB3ZSBhcmUgZGVhbGluZyB3aXRoIElSUSgpIG9yIElSUU5vRmxhZ3MoKQoJICogcmVz
b3VyY2UgKHRoZSBsZWdhY3kgSVNBIHJlc291cmNlcykuIFdpdGggbW9kZXJuIEFDUEkgNSBk
ZXZpY2VzCgkgKiB1c2luZyBleHRlbmRlZCBJUlEgZGVzY3JpcHRvcnMgd2UgdGFrZSB0aGUg
SVJRIGNvbmZpZ3VyYXRpb24KCSAqIGZyb20gX0NSUyBkaXJlY3RseS4KCSAqLwoJaWYgKGNo
ZWNrX292ZXJyaWRlICYmCgkgICAgYWNwaV9kZXZfaXJxX292ZXJyaWRlKGdzaSwgdHJpZ2dl
cmluZywgcG9sYXJpdHksIHNoYXJlYWJsZSkgJiYKCSAgICAhYWNwaV9nZXRfb3ZlcnJpZGVf
aXJxKGdzaSwgJnQsICZwKSkgewoJCXU4IHRyaWcgPSB0ID8gQUNQSV9MRVZFTF9TRU5TSVRJ
VkUgOiBBQ1BJX0VER0VfU0VOU0lUSVZFOwoJCXU4IHBvbCA9IHAgPyBBQ1BJX0FDVElWRV9M
T1cgOiBBQ1BJX0FDVElWRV9ISUdIOwoKCQlpZiAodHJpZ2dlcmluZyAhPSB0cmlnIHx8IHBv
bGFyaXR5ICE9IHBvbCkgewoJCQlwcl93YXJuKCJBQ1BJOiBJUlEgJWQgb3ZlcnJpZGUgdG8g
JXMlcywgJXMlc1xuIiwgZ3NpLAoJCQkJdCA/ICJsZXZlbCIgOiAiZWRnZSIsCgkJCQl0cmln
ID09IHRyaWdnZXJpbmcgPyAiIiA6ICIoISkiLAoJCQkJcCA/ICJsb3ciIDogImhpZ2giLAoJ
CQkJcG9sID09IHBvbGFyaXR5ID8gIiIgOiAiKCEpIik7CgkJCXRyaWdnZXJpbmcgPSB0cmln
OwoJCQlwb2xhcml0eSA9IHBvbDsKCQl9Cgl9CgoJcmVzLT5mbGFncyA9IGFjcGlfZGV2X2ly
cV9mbGFncyh0cmlnZ2VyaW5nLCBwb2xhcml0eSwgc2hhcmVhYmxlLCB3YWtlX2NhcGFibGUp
OwoJaXJxID0gYWNwaV9yZWdpc3Rlcl9nc2koTlVMTCwgZ3NpLCB0cmlnZ2VyaW5nLCBwb2xh
cml0eSk7CglpZiAoaXJxID49IDApIHsKCQlyZXMtPnN0YXJ0ID0gaXJxOwoJCXJlcy0+ZW5k
ID0gaXJxOwoJfSBlbHNlIHsKCQlpcnFyZXNvdXJjZV9kaXNhYmxlZChyZXMsIGdzaSk7Cgl9
Cn0KCi8qKgogKiBhY3BpX2Rldl9yZXNvdXJjZV9pbnRlcnJ1cHQgLSBFeHRyYWN0IEFDUEkg
aW50ZXJydXB0IHJlc291cmNlIGluZm9ybWF0aW9uLgogKiBAYXJlczogSW5wdXQgQUNQSSBy
ZXNvdXJjZSBvYmplY3QuCiAqIEBpbmRleDogSW5kZXggaW50byB0aGUgYXJyYXkgb2YgR1NJ
cyByZXByZXNlbnRlZCBieSB0aGUgcmVzb3VyY2UuCiAqIEByZXM6IE91dHB1dCBnZW5lcmlj
IHJlc291cmNlIG9iamVjdC4KICoKICogQ2hlY2sgaWYgdGhlIGdpdmVuIEFDUEkgcmVzb3Vy
Y2Ugb2JqZWN0IHJlcHJlc2VudHMgYW4gaW50ZXJydXB0IHJlc291cmNlCiAqIGFuZCBAaW5k
ZXggZG9lcyBub3QgZXhjZWVkIHRoZSByZXNvdXJjZSdzIGludGVycnVwdCBjb3VudCAodHJ1
ZSBpcyByZXR1cm5lZAogKiBpbiB0aGF0IGNhc2UgcmVnYXJkbGVzcyBvZiB0aGUgcmVzdWx0
cyBvZiB0aGUgb3RoZXIgY2hlY2tzKSkuICBJZiB0aGF0J3MgdGhlCiAqIGNhc2UsIHJlZ2lz
dGVyIHRoZSBHU0kgY29ycmVzcG9uZGluZyB0byBAaW5kZXggZnJvbSB0aGUgYXJyYXkgb2Yg
aW50ZXJydXB0cwogKiByZXByZXNlbnRlZCBieSB0aGUgcmVzb3VyY2UgYW5kIHBvcHVsYXRl
IHRoZSBnZW5lcmljIHJlc291cmNlIG9iamVjdCBwb2ludGVkCiAqIHRvIGJ5IEByZXMgYWNj
b3JkaW5nbHkuICBJZiB0aGUgcmVnaXN0cmF0aW9uIG9mIHRoZSBHU0kgaXMgbm90IHN1Y2Nl
c3NmdWwsCiAqIElPUkVTT1VSQ0VfRElTQUJMRUQgd2lsbCBiZSBzZXQgaXQgdGhhdCBvYmpl
Y3QncyBmbGFncy4KICoKICogUmV0dXJuOgogKiAxKSBmYWxzZSB3aXRoIHJlcy0+ZmxhZ3Mg
c2V0dGluZyB0byB6ZXJvOiBub3QgdGhlIGV4cGVjdGVkIHJlc291cmNlIHR5cGUKICogMikg
ZmFsc2Ugd2l0aCBJT1JFU09VUkNFX0RJU0FCTEVEIGluIHJlcy0+ZmxhZ3M6IHZhbGlkIHVu
YXNzaWduZWQgcmVzb3VyY2UKICogMykgdHJ1ZTogdmFsaWQgYXNzaWduZWQgcmVzb3VyY2UK
ICovCmJvb2wgYWNwaV9kZXZfcmVzb3VyY2VfaW50ZXJydXB0KHN0cnVjdCBhY3BpX3Jlc291
cmNlICphcmVzLCBpbnQgaW5kZXgsCgkJCQkgc3RydWN0IHJlc291cmNlICpyZXMpCnsKCXN0
cnVjdCBhY3BpX3Jlc291cmNlX2lycSAqaXJxOwoJc3RydWN0IGFjcGlfcmVzb3VyY2VfZXh0
ZW5kZWRfaXJxICpleHRfaXJxOwoKCXN3aXRjaCAoYXJlcy0+dHlwZSkgewoJY2FzZSBBQ1BJ
X1JFU09VUkNFX1RZUEVfSVJROgoJCS8qCgkJICogUGVyIHNwZWMsIG9ubHkgb25lIGludGVy
cnVwdCBwZXIgZGVzY3JpcHRvciBpcyBhbGxvd2VkIGluCgkJICogX0NSUywgYnV0IHNvbWUg
ZmlybXdhcmUgdmlvbGF0ZXMgdGhpcywgc28gcGFyc2UgdGhlbSBhbGwuCgkJICovCgkJaXJx
ID0gJmFyZXMtPmRhdGEuaXJxOwoJCWlmIChpbmRleCA+PSBpcnEtPmludGVycnVwdF9jb3Vu
dCkgewoJCQlpcnFyZXNvdXJjZV9kaXNhYmxlZChyZXMsIDApOwoJCQlyZXR1cm4gZmFsc2U7
CgkJfQoJCWFjcGlfZGV2X2dldF9pcnFyZXNvdXJjZShyZXMsIGlycS0+aW50ZXJydXB0c1tp
bmRleF0sCgkJCQkJIGlycS0+dHJpZ2dlcmluZywgaXJxLT5wb2xhcml0eSwKCQkJCQkgaXJx
LT5zaGFyZWFibGUsIGlycS0+d2FrZV9jYXBhYmxlLAoJCQkJCSB0cnVlKTsKCQlicmVhazsK
CWNhc2UgQUNQSV9SRVNPVVJDRV9UWVBFX0VYVEVOREVEX0lSUToKCQlleHRfaXJxID0gJmFy
ZXMtPmRhdGEuZXh0ZW5kZWRfaXJxOwoJCWlmIChpbmRleCA+PSBleHRfaXJxLT5pbnRlcnJ1
cHRfY291bnQpIHsKCQkJaXJxcmVzb3VyY2VfZGlzYWJsZWQocmVzLCAwKTsKCQkJcmV0dXJu
IGZhbHNlOwoJCX0KCQlpZiAoaXNfZ3NpKGV4dF9pcnEpKQoJCQlhY3BpX2Rldl9nZXRfaXJx
cmVzb3VyY2UocmVzLCBleHRfaXJxLT5pbnRlcnJ1cHRzW2luZGV4XSwKCQkJCQkgZXh0X2ly
cS0+dHJpZ2dlcmluZywgZXh0X2lycS0+cG9sYXJpdHksCgkJCQkJIGV4dF9pcnEtPnNoYXJl
YWJsZSwgZXh0X2lycS0+d2FrZV9jYXBhYmxlLAoJCQkJCSBmYWxzZSk7CgkJZWxzZQoJCQlp
cnFyZXNvdXJjZV9kaXNhYmxlZChyZXMsIDApOwoJCWJyZWFrOwoJZGVmYXVsdDoKCQlyZXMt
PmZsYWdzID0gMDsKCQlyZXR1cm4gZmFsc2U7Cgl9CgoJcmV0dXJuIHRydWU7Cn0KRVhQT1JU
X1NZTUJPTF9HUEwoYWNwaV9kZXZfcmVzb3VyY2VfaW50ZXJydXB0KTsKCi8qKgogKiBhY3Bp
X2Rldl9mcmVlX3Jlc291cmNlX2xpc3QgLSBGcmVlIHJlc291cmNlIGZyb20gJWFjcGlfZGV2
X2dldF9yZXNvdXJjZXMoKS4KICogQGxpc3Q6IFRoZSBoZWFkIG9mIHRoZSByZXNvdXJjZSBs
aXN0IHRvIGZyZWUuCiAqLwp2b2lkIGFjcGlfZGV2X2ZyZWVfcmVzb3VyY2VfbGlzdChzdHJ1
Y3QgbGlzdF9oZWFkICpsaXN0KQp7CglyZXNvdXJjZV9saXN0X2ZyZWUobGlzdCk7Cn0KRVhQ
T1JUX1NZTUJPTF9HUEwoYWNwaV9kZXZfZnJlZV9yZXNvdXJjZV9saXN0KTsKCnN0cnVjdCBy
ZXNfcHJvY19jb250ZXh0IHsKCXN0cnVjdCBsaXN0X2hlYWQgKmxpc3Q7CglpbnQgKCpwcmVw
cm9jKShzdHJ1Y3QgYWNwaV9yZXNvdXJjZSAqLCB2b2lkICopOwoJdm9pZCAqcHJlcHJvY19k
YXRhOwoJaW50IGNvdW50OwoJaW50IGVycm9yOwp9OwoKc3RhdGljIGFjcGlfc3RhdHVzIGFj
cGlfZGV2X25ld19yZXNvdXJjZV9lbnRyeShzdHJ1Y3QgcmVzb3VyY2Vfd2luICp3aW4sCgkJ
CQkJICAgICAgIHN0cnVjdCByZXNfcHJvY19jb250ZXh0ICpjKQp7CglzdHJ1Y3QgcmVzb3Vy
Y2VfZW50cnkgKnJlbnRyeTsKCglyZW50cnkgPSByZXNvdXJjZV9saXN0X2NyZWF0ZV9lbnRy
eShOVUxMLCAwKTsKCWlmICghcmVudHJ5KSB7CgkJYy0+ZXJyb3IgPSAtRU5PTUVNOwoJCXJl
dHVybiBBRV9OT19NRU1PUlk7Cgl9CgkqcmVudHJ5LT5yZXMgPSB3aW4tPnJlczsKCXJlbnRy
eS0+b2Zmc2V0ID0gd2luLT5vZmZzZXQ7CglyZXNvdXJjZV9saXN0X2FkZF90YWlsKHJlbnRy
eSwgYy0+bGlzdCk7CgljLT5jb3VudCsrOwoJcmV0dXJuIEFFX09LOwp9CgpzdGF0aWMgYWNw
aV9zdGF0dXMgYWNwaV9kZXZfcHJvY2Vzc19yZXNvdXJjZShzdHJ1Y3QgYWNwaV9yZXNvdXJj
ZSAqYXJlcywKCQkJCQkgICAgIHZvaWQgKmNvbnRleHQpCnsKCXN0cnVjdCByZXNfcHJvY19j
b250ZXh0ICpjID0gY29udGV4dDsKCXN0cnVjdCByZXNvdXJjZV93aW4gd2luOwoJc3RydWN0
IHJlc291cmNlICpyZXMgPSAmd2luLnJlczsKCWludCBpOwoKCWlmIChjLT5wcmVwcm9jKSB7
CgkJaW50IHJldDsKCgkJcmV0ID0gYy0+cHJlcHJvYyhhcmVzLCBjLT5wcmVwcm9jX2RhdGEp
OwoJCWlmIChyZXQgPCAwKSB7CgkJCWMtPmVycm9yID0gcmV0OwoJCQlyZXR1cm4gQUVfQUJP
UlRfTUVUSE9EOwoJCX0gZWxzZSBpZiAocmV0ID4gMCkgewoJCQlyZXR1cm4gQUVfT0s7CgkJ
fQoJfQoKCW1lbXNldCgmd2luLCAwLCBzaXplb2Yod2luKSk7CgoJaWYgKGFjcGlfZGV2X3Jl
c291cmNlX21lbW9yeShhcmVzLCByZXMpCgkgICAgfHwgYWNwaV9kZXZfcmVzb3VyY2VfaW8o
YXJlcywgcmVzKQoJICAgIHx8IGFjcGlfZGV2X3Jlc291cmNlX2FkZHJlc3Nfc3BhY2UoYXJl
cywgJndpbikKCSAgICB8fCBhY3BpX2Rldl9yZXNvdXJjZV9leHRfYWRkcmVzc19zcGFjZShh
cmVzLCAmd2luKSkKCQlyZXR1cm4gYWNwaV9kZXZfbmV3X3Jlc291cmNlX2VudHJ5KCZ3aW4s
IGMpOwoKCWZvciAoaSA9IDA7IGFjcGlfZGV2X3Jlc291cmNlX2ludGVycnVwdChhcmVzLCBp
LCByZXMpOyBpKyspIHsKCQlhY3BpX3N0YXR1cyBzdGF0dXM7CgoJCXN0YXR1cyA9IGFjcGlf
ZGV2X25ld19yZXNvdXJjZV9lbnRyeSgmd2luLCBjKTsKCQlpZiAoQUNQSV9GQUlMVVJFKHN0
YXR1cykpCgkJCXJldHVybiBzdGF0dXM7Cgl9CgoJcmV0dXJuIEFFX09LOwp9CgpzdGF0aWMg
aW50IF9fYWNwaV9kZXZfZ2V0X3Jlc291cmNlcyhzdHJ1Y3QgYWNwaV9kZXZpY2UgKmFkZXYs
CgkJCQkgICAgc3RydWN0IGxpc3RfaGVhZCAqbGlzdCwKCQkJCSAgICBpbnQgKCpwcmVwcm9j
KShzdHJ1Y3QgYWNwaV9yZXNvdXJjZSAqLCB2b2lkICopLAoJCQkJICAgIHZvaWQgKnByZXBy
b2NfZGF0YSwgY2hhciAqbWV0aG9kKQp7CglzdHJ1Y3QgcmVzX3Byb2NfY29udGV4dCBjOwoJ
YWNwaV9zdGF0dXMgc3RhdHVzOwoKCWlmICghYWRldiB8fCAhYWRldi0+aGFuZGxlIHx8ICFs
aXN0X2VtcHR5KGxpc3QpKQoJCXJldHVybiAtRUlOVkFMOwoKCWlmICghYWNwaV9oYXNfbWV0
aG9kKGFkZXYtPmhhbmRsZSwgbWV0aG9kKSkKCQlyZXR1cm4gMDsKCgljLmxpc3QgPSBsaXN0
OwoJYy5wcmVwcm9jID0gcHJlcHJvYzsKCWMucHJlcHJvY19kYXRhID0gcHJlcHJvY19kYXRh
OwoJYy5jb3VudCA9IDA7CgljLmVycm9yID0gMDsKCXN0YXR1cyA9IGFjcGlfd2Fsa19yZXNv
dXJjZXMoYWRldi0+aGFuZGxlLCBtZXRob2QsCgkJCQkgICAgIGFjcGlfZGV2X3Byb2Nlc3Nf
cmVzb3VyY2UsICZjKTsKCWlmIChBQ1BJX0ZBSUxVUkUoc3RhdHVzKSkgewoJCWFjcGlfZGV2
X2ZyZWVfcmVzb3VyY2VfbGlzdChsaXN0KTsKCQlyZXR1cm4gYy5lcnJvciA/IGMuZXJyb3Ig
OiAtRUlPOwoJfQoKCXJldHVybiBjLmNvdW50Owp9CgovKioKICogYWNwaV9kZXZfZ2V0X3Jl
c291cmNlcyAtIEdldCBjdXJyZW50IHJlc291cmNlcyBvZiBhIGRldmljZS4KICogQGFkZXY6
IEFDUEkgZGV2aWNlIG5vZGUgdG8gZ2V0IHRoZSByZXNvdXJjZXMgZm9yLgogKiBAbGlzdDog
SGVhZCBvZiB0aGUgcmVzdWx0YW50IGxpc3Qgb2YgcmVzb3VyY2VzIChtdXN0IGJlIGVtcHR5
KS4KICogQHByZXByb2M6IFRoZSBjYWxsZXIncyBwcmVwcm9jZXNzaW5nIHJvdXRpbmUuCiAq
IEBwcmVwcm9jX2RhdGE6IFBvaW50ZXIgcGFzc2VkIHRvIHRoZSBjYWxsZXIncyBwcmVwcm9j
ZXNzaW5nIHJvdXRpbmUuCiAqCiAqIEV2YWx1YXRlIHRoZSBfQ1JTIG1ldGhvZCBmb3IgdGhl
IGdpdmVuIGRldmljZSBub2RlIGFuZCBwcm9jZXNzIGl0cyBvdXRwdXQgYnkKICogKDEpIGV4
ZWN1dGluZyB0aGUgQHByZXByb2MoKSByb3V0aW5lIHByb3ZpZGVkIGJ5IHRoZSBjYWxsZXIs
IHBhc3NpbmcgdGhlCiAqIHJlc291cmNlIHBvaW50ZXIgYW5kIEBwcmVwcm9jX2RhdGEgdG8g
aXQgYXMgYXJndW1lbnRzLCBmb3IgZWFjaCBBQ1BJIHJlc291cmNlCiAqIHJldHVybmVkIGFu
ZCAoMikgY29udmVydGluZyBhbGwgb2YgdGhlIHJldHVybmVkIEFDUEkgcmVzb3VyY2VzIGlu
dG8gc3RydWN0CiAqIHJlc291cmNlIG9iamVjdHMgaWYgcG9zc2libGUuICBJZiB0aGUgcmV0
dXJuIHZhbHVlIG9mIEBwcmVwcm9jKCkgaW4gc3RlcCAoMSkKICogaXMgZGlmZmVyZW50IGZy
b20gMCwgc3RlcCAoMikgaXMgbm90IGFwcGxpZWQgdG8gdGhlIGdpdmVuIEFDUEkgcmVzb3Vy
Y2UgYW5kCiAqIGlmIHRoYXQgdmFsdWUgaXMgbmVnYXRpdmUsIHRoZSB3aG9sZSBwcm9jZXNz
aW5nIGlzIGFib3J0ZWQgYW5kIHRoYXQgdmFsdWUgaXMKICogcmV0dXJuZWQgYXMgdGhlIGZp
bmFsIGVycm9yIGNvZGUuCiAqCiAqIFRoZSByZXN1bHRhbnQgc3RydWN0IHJlc291cmNlIG9i
amVjdHMgYXJlIHB1dCBvbiB0aGUgbGlzdCBwb2ludGVkIHRvIGJ5CiAqIEBsaXN0LCB0aGF0
IG11c3QgYmUgZW1wdHkgaW5pdGlhbGx5LCBhcyBtZW1iZXJzIG9mIHN0cnVjdCByZXNvdXJj
ZV9lbnRyeQogKiBvYmplY3RzLiAgQ2FsbGVycyBvZiB0aGlzIHJvdXRpbmUgc2hvdWxkIHVz
ZSAlYWNwaV9kZXZfZnJlZV9yZXNvdXJjZV9saXN0KCkgdG8KICogZnJlZSB0aGF0IGxpc3Qu
CiAqCiAqIFRoZSBudW1iZXIgb2YgcmVzb3VyY2VzIGluIHRoZSBvdXRwdXQgbGlzdCBpcyBy
ZXR1cm5lZCBvbiBzdWNjZXNzLCBhbiBlcnJvcgogKiBjb2RlIHJlZmxlY3RpbmcgdGhlIGVy
cm9yIGNvbmRpdGlvbiBpcyByZXR1cm5lZCBvdGhlcndpc2UuCiAqLwppbnQgYWNwaV9kZXZf
Z2V0X3Jlc291cmNlcyhzdHJ1Y3QgYWNwaV9kZXZpY2UgKmFkZXYsIHN0cnVjdCBsaXN0X2hl
YWQgKmxpc3QsCgkJCSAgIGludCAoKnByZXByb2MpKHN0cnVjdCBhY3BpX3Jlc291cmNlICos
IHZvaWQgKiksCgkJCSAgIHZvaWQgKnByZXByb2NfZGF0YSkKewoJcmV0dXJuIF9fYWNwaV9k
ZXZfZ2V0X3Jlc291cmNlcyhhZGV2LCBsaXN0LCBwcmVwcm9jLCBwcmVwcm9jX2RhdGEsCgkJ
CQkJTUVUSE9EX05BTUVfX0NSUyk7Cn0KRVhQT1JUX1NZTUJPTF9HUEwoYWNwaV9kZXZfZ2V0
X3Jlc291cmNlcyk7CgpzdGF0aWMgaW50IGlzX21lbW9yeShzdHJ1Y3QgYWNwaV9yZXNvdXJj
ZSAqYXJlcywgdm9pZCAqbm90X3VzZWQpCnsKCXN0cnVjdCByZXNvdXJjZV93aW4gd2luOwoJ
c3RydWN0IHJlc291cmNlICpyZXMgPSAmd2luLnJlczsKCgltZW1zZXQoJndpbiwgMCwgc2l6
ZW9mKHdpbikpOwoKCWlmIChhY3BpX2Rldl9maWx0ZXJfcmVzb3VyY2VfdHlwZShhcmVzLCBJ
T1JFU09VUkNFX01FTSkpCgkJcmV0dXJuIDE7CgoJcmV0dXJuICEoYWNwaV9kZXZfcmVzb3Vy
Y2VfbWVtb3J5KGFyZXMsIHJlcykKCSAgICAgICB8fCBhY3BpX2Rldl9yZXNvdXJjZV9hZGRy
ZXNzX3NwYWNlKGFyZXMsICZ3aW4pCgkgICAgICAgfHwgYWNwaV9kZXZfcmVzb3VyY2VfZXh0
X2FkZHJlc3Nfc3BhY2UoYXJlcywgJndpbikpOwp9CgovKioKICogYWNwaV9kZXZfZ2V0X2Rt
YV9yZXNvdXJjZXMgLSBHZXQgY3VycmVudCBETUEgcmVzb3VyY2VzIG9mIGEgZGV2aWNlLgog
KiBAYWRldjogQUNQSSBkZXZpY2Ugbm9kZSB0byBnZXQgdGhlIHJlc291cmNlcyBmb3IuCiAq
IEBsaXN0OiBIZWFkIG9mIHRoZSByZXN1bHRhbnQgbGlzdCBvZiByZXNvdXJjZXMgKG11c3Qg
YmUgZW1wdHkpLgogKgogKiBFdmFsdWF0ZSB0aGUgX0RNQSBtZXRob2QgZm9yIHRoZSBnaXZl
biBkZXZpY2Ugbm9kZSBhbmQgcHJvY2VzcyBpdHMKICogb3V0cHV0LgogKgogKiBUaGUgcmVz
dWx0YW50IHN0cnVjdCByZXNvdXJjZSBvYmplY3RzIGFyZSBwdXQgb24gdGhlIGxpc3QgcG9p
bnRlZCB0bwogKiBieSBAbGlzdCwgdGhhdCBtdXN0IGJlIGVtcHR5IGluaXRpYWxseSwgYXMg
bWVtYmVycyBvZiBzdHJ1Y3QKICogcmVzb3VyY2VfZW50cnkgb2JqZWN0cy4gIENhbGxlcnMg
b2YgdGhpcyByb3V0aW5lIHNob3VsZCB1c2UKICogJWFjcGlfZGV2X2ZyZWVfcmVzb3VyY2Vf
bGlzdCgpIHRvIGZyZWUgdGhhdCBsaXN0LgogKgogKiBUaGUgbnVtYmVyIG9mIHJlc291cmNl
cyBpbiB0aGUgb3V0cHV0IGxpc3QgaXMgcmV0dXJuZWQgb24gc3VjY2VzcywKICogYW4gZXJy
b3IgY29kZSByZWZsZWN0aW5nIHRoZSBlcnJvciBjb25kaXRpb24gaXMgcmV0dXJuZWQgb3Ro
ZXJ3aXNlLgogKi8KaW50IGFjcGlfZGV2X2dldF9kbWFfcmVzb3VyY2VzKHN0cnVjdCBhY3Bp
X2RldmljZSAqYWRldiwgc3RydWN0IGxpc3RfaGVhZCAqbGlzdCkKewoJcmV0dXJuIF9fYWNw
aV9kZXZfZ2V0X3Jlc291cmNlcyhhZGV2LCBsaXN0LCBpc19tZW1vcnksIE5VTEwsCgkJCQkJ
TUVUSE9EX05BTUVfX0RNQSk7Cn0KRVhQT1JUX1NZTUJPTF9HUEwoYWNwaV9kZXZfZ2V0X2Rt
YV9yZXNvdXJjZXMpOwoKLyoqCiAqIGFjcGlfZGV2X2dldF9tZW1vcnlfcmVzb3VyY2VzIC0g
R2V0IGN1cnJlbnQgbWVtb3J5IHJlc291cmNlcyBvZiBhIGRldmljZS4KICogQGFkZXY6IEFD
UEkgZGV2aWNlIG5vZGUgdG8gZ2V0IHRoZSByZXNvdXJjZXMgZm9yLgogKiBAbGlzdDogSGVh
ZCBvZiB0aGUgcmVzdWx0YW50IGxpc3Qgb2YgcmVzb3VyY2VzIChtdXN0IGJlIGVtcHR5KS4K
ICoKICogVGhpcyBpcyBhIGhlbHBlciBmdW5jdGlvbiB0aGF0IGxvY2F0ZXMgYWxsIG1lbW9y
eSB0eXBlIHJlc291cmNlcyBvZiBAYWRldgogKiB3aXRoIGFjcGlfZGV2X2dldF9yZXNvdXJj
ZXMoKS4KICoKICogVGhlIG51bWJlciBvZiByZXNvdXJjZXMgaW4gdGhlIG91dHB1dCBsaXN0
IGlzIHJldHVybmVkIG9uIHN1Y2Nlc3MsIGFuIGVycm9yCiAqIGNvZGUgcmVmbGVjdGluZyB0
aGUgZXJyb3IgY29uZGl0aW9uIGlzIHJldHVybmVkIG90aGVyd2lzZS4KICovCmludCBhY3Bp
X2Rldl9nZXRfbWVtb3J5X3Jlc291cmNlcyhzdHJ1Y3QgYWNwaV9kZXZpY2UgKmFkZXYsIHN0
cnVjdCBsaXN0X2hlYWQgKmxpc3QpCnsKCXJldHVybiBhY3BpX2Rldl9nZXRfcmVzb3VyY2Vz
KGFkZXYsIGxpc3QsIGlzX21lbW9yeSwgTlVMTCk7Cn0KRVhQT1JUX1NZTUJPTF9HUEwoYWNw
aV9kZXZfZ2V0X21lbW9yeV9yZXNvdXJjZXMpOwoKLyoqCiAqIGFjcGlfZGV2X2ZpbHRlcl9y
ZXNvdXJjZV90eXBlIC0gRmlsdGVyIEFDUEkgcmVzb3VyY2UgYWNjb3JkaW5nIHRvIHJlc291
cmNlCiAqCQkJCSAgIHR5cGVzCiAqIEBhcmVzOiBJbnB1dCBBQ1BJIHJlc291cmNlIG9iamVj
dC4KICogQHR5cGVzOiBWYWxpZCByZXNvdXJjZSB0eXBlcyBvZiBJT1JFU09VUkNFX1hYWAog
KgogKiBUaGlzIGlzIGEgaGVscGVyIGZ1bmN0aW9uIHRvIHN1cHBvcnQgYWNwaV9kZXZfZ2V0
X3Jlc291cmNlcygpLCB3aGljaCBmaWx0ZXJzCiAqIEFDUEkgcmVzb3VyY2Ugb2JqZWN0cyBh
Y2NvcmRpbmcgdG8gcmVzb3VyY2UgdHlwZXMuCiAqLwppbnQgYWNwaV9kZXZfZmlsdGVyX3Jl
c291cmNlX3R5cGUoc3RydWN0IGFjcGlfcmVzb3VyY2UgKmFyZXMsCgkJCQkgIHVuc2lnbmVk
IGxvbmcgdHlwZXMpCnsKCXVuc2lnbmVkIGxvbmcgdHlwZSA9IDA7CgoJc3dpdGNoIChhcmVz
LT50eXBlKSB7CgljYXNlIEFDUElfUkVTT1VSQ0VfVFlQRV9NRU1PUlkyNDoKCWNhc2UgQUNQ
SV9SRVNPVVJDRV9UWVBFX01FTU9SWTMyOgoJY2FzZSBBQ1BJX1JFU09VUkNFX1RZUEVfRklY
RURfTUVNT1JZMzI6CgkJdHlwZSA9IElPUkVTT1VSQ0VfTUVNOwoJCWJyZWFrOwoJY2FzZSBB
Q1BJX1JFU09VUkNFX1RZUEVfSU86CgljYXNlIEFDUElfUkVTT1VSQ0VfVFlQRV9GSVhFRF9J
TzoKCQl0eXBlID0gSU9SRVNPVVJDRV9JTzsKCQlicmVhazsKCWNhc2UgQUNQSV9SRVNPVVJD
RV9UWVBFX0lSUToKCWNhc2UgQUNQSV9SRVNPVVJDRV9UWVBFX0VYVEVOREVEX0lSUToKCQl0
eXBlID0gSU9SRVNPVVJDRV9JUlE7CgkJYnJlYWs7CgljYXNlIEFDUElfUkVTT1VSQ0VfVFlQ
RV9ETUE6CgljYXNlIEFDUElfUkVTT1VSQ0VfVFlQRV9GSVhFRF9ETUE6CgkJdHlwZSA9IElP
UkVTT1VSQ0VfRE1BOwoJCWJyZWFrOwoJY2FzZSBBQ1BJX1JFU09VUkNFX1RZUEVfR0VORVJJ
Q19SRUdJU1RFUjoKCQl0eXBlID0gSU9SRVNPVVJDRV9SRUc7CgkJYnJlYWs7CgljYXNlIEFD
UElfUkVTT1VSQ0VfVFlQRV9BRERSRVNTMTY6CgljYXNlIEFDUElfUkVTT1VSQ0VfVFlQRV9B
RERSRVNTMzI6CgljYXNlIEFDUElfUkVTT1VSQ0VfVFlQRV9BRERSRVNTNjQ6CgljYXNlIEFD
UElfUkVTT1VSQ0VfVFlQRV9FWFRFTkRFRF9BRERSRVNTNjQ6CgkJaWYgKGFyZXMtPmRhdGEu
YWRkcmVzcy5yZXNvdXJjZV90eXBlID09IEFDUElfTUVNT1JZX1JBTkdFKQoJCQl0eXBlID0g
SU9SRVNPVVJDRV9NRU07CgkJZWxzZSBpZiAoYXJlcy0+ZGF0YS5hZGRyZXNzLnJlc291cmNl
X3R5cGUgPT0gQUNQSV9JT19SQU5HRSkKCQkJdHlwZSA9IElPUkVTT1VSQ0VfSU87CgkJZWxz
ZSBpZiAoYXJlcy0+ZGF0YS5hZGRyZXNzLnJlc291cmNlX3R5cGUgPT0KCQkJIEFDUElfQlVT
X05VTUJFUl9SQU5HRSkKCQkJdHlwZSA9IElPUkVTT1VSQ0VfQlVTOwoJCWJyZWFrOwoJZGVm
YXVsdDoKCQlicmVhazsKCX0KCglyZXR1cm4gKHR5cGUgJiB0eXBlcykgPyAwIDogMTsKfQpF
WFBPUlRfU1lNQk9MX0dQTChhY3BpX2Rldl9maWx0ZXJfcmVzb3VyY2VfdHlwZSk7CgpzdGF0
aWMgaW50IGFjcGlfZGV2X2NvbnN1bWVzX3JlcyhzdHJ1Y3QgYWNwaV9kZXZpY2UgKmFkZXYs
IHN0cnVjdCByZXNvdXJjZSAqcmVzKQp7CglzdHJ1Y3QgbGlzdF9oZWFkIHJlc291cmNlX2xp
c3Q7CglzdHJ1Y3QgcmVzb3VyY2VfZW50cnkgKnJlbnRyeTsKCWludCByZXQsIGZvdW5kID0g
MDsKCglJTklUX0xJU1RfSEVBRCgmcmVzb3VyY2VfbGlzdCk7CglyZXQgPSBhY3BpX2Rldl9n
ZXRfcmVzb3VyY2VzKGFkZXYsICZyZXNvdXJjZV9saXN0LCBOVUxMLCBOVUxMKTsKCWlmIChy
ZXQgPCAwKQoJCXJldHVybiAwOwoKCWxpc3RfZm9yX2VhY2hfZW50cnkocmVudHJ5LCAmcmVz
b3VyY2VfbGlzdCwgbm9kZSkgewoJCWlmIChyZXNvdXJjZV9jb250YWlucyhyZW50cnktPnJl
cywgcmVzKSkgewoJCQlmb3VuZCA9IDE7CgkJCWJyZWFrOwoJCX0KCgl9CgoJYWNwaV9kZXZf
ZnJlZV9yZXNvdXJjZV9saXN0KCZyZXNvdXJjZV9saXN0KTsKCXJldHVybiBmb3VuZDsKfQoK
c3RhdGljIGFjcGlfc3RhdHVzIGFjcGlfcmVzX2NvbnN1bWVyX2NiKGFjcGlfaGFuZGxlIGhh
bmRsZSwgdTMyIGRlcHRoLAoJCQkJCSB2b2lkICpjb250ZXh0LCB2b2lkICoqcmV0KQp7Cglz
dHJ1Y3QgcmVzb3VyY2UgKnJlcyA9IGNvbnRleHQ7CglzdHJ1Y3QgYWNwaV9kZXZpY2UgKipj
b25zdW1lciA9IChzdHJ1Y3QgYWNwaV9kZXZpY2UgKiopIHJldDsKCXN0cnVjdCBhY3BpX2Rl
dmljZSAqYWRldiA9IGFjcGlfZmV0Y2hfYWNwaV9kZXYoaGFuZGxlKTsKCglpZiAoIWFkZXYp
CgkJcmV0dXJuIEFFX09LOwoKCWlmIChhY3BpX2Rldl9jb25zdW1lc19yZXMoYWRldiwgcmVz
KSkgewoJCSpjb25zdW1lciA9IGFkZXY7CgkJcmV0dXJuIEFFX0NUUkxfVEVSTUlOQVRFOwoJ
fQoKCXJldHVybiBBRV9PSzsKfQoKLyoqCiAqIGFjcGlfcmVzb3VyY2VfY29uc3VtZXIgLSBG
aW5kIHRoZSBBQ1BJIGRldmljZSB0aGF0IGNvbnN1bWVzIEByZXMuCiAqIEByZXM6IFJlc291
cmNlIHRvIHNlYXJjaCBmb3IuCiAqCiAqIFNlYXJjaCB0aGUgY3VycmVudCByZXNvdXJjZSBz
ZXR0aW5ncyAoX0NSUykgb2YgZXZlcnkgQUNQSSBkZXZpY2Ugbm9kZQogKiBmb3IgQHJlcy4g
IElmIHdlIGZpbmQgYW4gQUNQSSBkZXZpY2Ugd2hvc2UgX0NSUyBpbmNsdWRlcyBAcmVzLCBy
ZXR1cm4KICogaXQuICBPdGhlcndpc2UsIHJldHVybiBOVUxMLgogKi8Kc3RydWN0IGFjcGlf
ZGV2aWNlICphY3BpX3Jlc291cmNlX2NvbnN1bWVyKHN0cnVjdCByZXNvdXJjZSAqcmVzKQp7
CglzdHJ1Y3QgYWNwaV9kZXZpY2UgKmNvbnN1bWVyID0gTlVMTDsKCglhY3BpX2dldF9kZXZp
Y2VzKE5VTEwsIGFjcGlfcmVzX2NvbnN1bWVyX2NiLCByZXMsICh2b2lkICoqKSAmY29uc3Vt
ZXIpOwoJcmV0dXJuIGNvbnN1bWVyOwp9Cg==

--------------fAWBgLL05jQozC47B0qu3NJT--

